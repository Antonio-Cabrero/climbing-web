{"version":3,"sources":["webpack:///./app/components/common/svg/svg-edit.js","webpack:///./app/utils/config.js"],"names":["_react","__webpack_require__","i","f","r","_reactRouterDom","_reactBootstrap","_svgPathParser","u","d","_reactRouter","h","t","__esModule","default","SvgEdit","_this2","this","document","title","_config2","getTitle","_superagent2","get","getUrl","getRegion","props","match","params","problemId","withCredentials","end","err","res","setState","error","m","body","media","filter","x","id","mediaId","readOnlySvgs","svgId","points","svgs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","svg","value","parsePath","path","push","nr","hasAnchor","return","w","width","height","ctrl","activePoint","draggedPoint","draggedCubic","areaId","areaName","areaVisibility","sectorId","sectorName","sectorVisibility","name","grade","visibility","addEventListener","handleKeyDown","bind","handleKeyUp","removeEventListener","e","ctrlKey","key","state","window","history","back","event","_this3","preventDefault","post","send","delete","length","generatePath","pushUrl","dim","refs","getBoundingClientRect","dx","dy","Math","round","clientX","left","y","clientY","top","coords","getMouseCoords","forEach","p","q","c","a","rx","ry","rot","laf","sf","setPointCoords","setCubicCoords","active","anchor","index","v","splice","shapes","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_react2","createElement","className","strokeWidth","strokeDasharray","commands","parseSVG","makeAbsolute","generateSvgNrAndAnchor","ixNr","ixAnchor","maxY","minY","len","cx","cy","fontSize","map","code","x1","y1","x2","y2","x0","y0","_this4","_reactFontawesome2","icon","spin","size","status","toString","Redirect","to","circles","anchors","onMouseDown","setDraggedCubic","setDraggedPoint","Breadcrumb","Link","Well","bsSize","onMouseUp","cancelDragging","onMouseLeave","onSubmit","save","FormGroup","controlId","Alert","bsStyle","ButtonGroup","DropdownButton","MenuItem","eventKey","onSelect","setPointType","Button","onClick","removeActivePoint","disabled","toggleAnchor","reset","onCancel","type","viewBox","addPoint","onMouseMove","handleMouseMove","ref","xlinkHref","parseReadOnlySvgs","module","exports","str","location","hostname","getDefaultCenter","lat","lng","getDefaultZoom","convertFromDateToString","date","getDate","getMonth","getFullYear"],"mappings":"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","file":"11.index.js","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Well, FormGroup, MenuItem, ButtonGroup, Button, DropdownButton, Alert, Breadcrumb } from 'react-bootstrap';\r\nimport {parseSVG, makeAbsolute} from 'svg-path-parser';\r\nimport config from '../../../utils/config.js';\r\nimport Request from 'superagent';\r\nimport { Redirect } from 'react-router';\r\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\r\nimport { faSpinner, faLock, faUserSecret } from '@fortawesome/fontawesome-free-solid';\r\n\r\nexport default class SvgEdit extends Component {\r\n  componentDidMount() {\r\n    document.title=config.getTitle() + \" | Problem edit (SVG)\";\r\n    Request.get(config.getUrl(\"problems?regionId=\" + config.getRegion() + \"&id=\" + this.props.match.params.problemId)).withCredentials().end((err, res) => {\r\n      if (err) {\r\n        this.setState({error: err});\r\n      } else {\r\n        const m = res.body[0].media.filter(x => x.id==this.props.match.params.mediaId)[0];\r\n        const readOnlySvgs = [];\r\n        var svgId = 0;\r\n        var points = [];\r\n        if (m.svgs) {\r\n          for (let svg of m.svgs) {\r\n            if (svg.problemId===res.body[0].id) {\r\n              svgId = svg.id;\r\n              points = this.parsePath(svg.path);\r\n            }\r\n            else {\r\n              readOnlySvgs.push({ nr: svg.nr, hasAnchor: svg.hasAnchor, path: svg.path });\r\n            }\r\n          }\r\n        }\r\n        this.setState({\r\n          mediaId: m.id,\r\n          nr: res.body[0].nr,\r\n          w: m.width,\r\n          h: m.height,\r\n          ctrl: false,\r\n          svgId: svgId,\r\n          points: points,\r\n          readOnlySvgs: readOnlySvgs,\r\n          activePoint: 0,\r\n          draggedPoint: false,\r\n          draggedCubic: false,\r\n          hasAnchor: true,\r\n          areaId: res.body[0].areaId,\r\n          areaName: res.body[0].areaName,\r\n          areaVisibility: res.body[0].areaVisibility,\r\n          sectorId: res.body[0].sectorId,\r\n          sectorName: res.body[0].sectorName,\r\n          sectorVisibility: res.body[0].sectorVisibility,\r\n          id: res.body[0].id,\r\n          name: res.body[0].name,\r\n          grade: res.body[0].grade,\r\n          visibility: res.body[0].visibility\r\n        });\r\n      }\r\n    });\r\n    document.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\r\n    document.addEventListener(\"keyup\", this.handleKeyUp.bind(this));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown.bind(this));\r\n    document.removeEventListener(\"keyup\", this.handleKeyUp.bind(this));\r\n  }\r\n\r\n  handleKeyDown(e) {\r\n    if (e.ctrlKey) this.setState({ctrl: true});\r\n  };\r\n\r\n  handleKeyUp(e) {\r\n    if (!e.ctrlKey) this.setState({ctrl: false});\r\n  };\r\n\r\n  toggleAnchor() {\r\n    this.setState({hasAnchor: !this.state.hasAnchor});\r\n  }\r\n\r\n  onCancel() {\r\n    window.history.back();\r\n  }\r\n\r\n  save(event) {\r\n    event.preventDefault();\r\n    Request.post(config.getUrl(\"problems/svg?problemId=\" + this.state.id + \"&mediaId=\" + this.state.mediaId))\r\n    .withCredentials()\r\n    .send({delete: this.state.points.length<2, id: this.state.svgId, path: this.generatePath(), hasAnchor: this.state.hasAnchor})\r\n    .end((err, res) => {\r\n      if (err) {\r\n        this.setState({error: err});\r\n      } else {\r\n        this.setState({pushUrl: \"/problem/\" + this.state.id});\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelDragging(e) {\r\n    this.setState({\r\n      draggedPoint: false,\r\n      draggedCubic: false\r\n    });\r\n  }\r\n\r\n  getMouseCoords(e) {\r\n    const dim = this.refs[\"buldreinfo-svg-edit-img\"].getBoundingClientRect();\r\n    const dx = this.state.w/dim.width;\r\n    const dy = this.state.h/dim.height;\r\n    const x = Math.round((e.clientX - dim.left) * dx);\r\n    const y = Math.round((e.clientY - dim.top) * dy);\r\n    return {x, y};\r\n  };\r\n\r\n  addPoint(e) {\r\n    if (this.state.ctrl) {\r\n      let coords = this.getMouseCoords(e);\r\n      let points = this.state.points;\r\n      points.push(coords);\r\n      this.setState({\r\n        points,\r\n        activePoint: points.length - 1\r\n      });\r\n    }\r\n  };\r\n\r\n  generatePath() {\r\n    var d = \"\";\r\n    this.state.points.forEach((p, i) => {\r\n      if (i === 0) { // first point\r\n        d += \"M \";\r\n      } else if (p.q) { // quadratic\r\n        d += `Q ${ p.q.x } ${ p.q.y } `;\r\n      } else if (p.c) { // cubic\r\n        d += `C ${ p.c[0].x } ${ p.c[0].y } ${ p.c[1].x } ${ p.c[1].y } `;\r\n      } else if (p.a) { // arc\r\n        d += `A ${ p.a.rx } ${ p.a.ry } ${ p.a.rot } ${ p.a.laf } ${ p.a.sf } `;\r\n      } else {\r\n        d += \"L \";\r\n      }\r\n      d += `${ p.x } ${ p.y } `;\r\n    })\r\n    return d;\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    e.preventDefault();\r\n    if (!this.state.ctrl) {\r\n      if (this.state.draggedPoint) {\r\n        this.setPointCoords(this.getMouseCoords(e));\r\n      } else if (this.state.draggedCubic !== false) {\r\n        this.setCubicCoords(this.getMouseCoords(e), this.state.draggedCubic);\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  setPointCoords(coords) {\r\n    const points = this.state.points;\r\n    const active = this.state.activePoint;\r\n    points[active].x = coords.x;\r\n    points[active].y = coords.y;\r\n    this.setState({points});\r\n  };\r\n\r\n  setCubicCoords(coords, anchor) {\r\n    const points = this.state.points;\r\n    const active = this.state.activePoint;\r\n    points[active].c[anchor].x = coords.x;\r\n    points[active].c[anchor].y = coords.y;\r\n    this.setState({ points });\r\n  };\r\n\r\n  setDraggedPoint(index) {\r\n    if (!this.state.ctrl) {\r\n      this.setState({activePoint: index, draggedPoint: true});\r\n    }\r\n  };\r\n\r\n  setDraggedCubic(index, anchor) {\r\n    if (!this.state.ctrl) {\r\n      this.setState({activePoint: index, draggedCubic: anchor});\r\n    }\r\n  };\r\n\r\n  setPointType(v) {\r\n    const points = this.state.points;\r\n    const active = this.state.activePoint;\r\n    if (active !== 0) { // not the first point\r\n      switch (v) {\r\n        case \"L\":\r\n          points[active] = {x: points[active].x, y: points[active].y};\r\n          break;\r\n        case \"C\":\r\n          points[active] = {\r\n            x: points[active].x,\r\n            y: points[active].y,\r\n            c: [\r\n                {\r\n                  x: (points[active].x + points[active - 1].x - 50) / 2,\r\n                  y: (points[active].y + points[active - 1].y) / 2\r\n                },\r\n                {\r\n                  x: (points[active].x + points[active - 1].x + 50) / 2,\r\n                  y: (points[active].y + points[active - 1].y) / 2\r\n                }\r\n            ]\r\n          };\r\n        break;\r\n      }\r\n      this.setState({points});\r\n    }\r\n  };\r\n\r\n  removeActivePoint(e) {\r\n    let points = this.state.points;\r\n    let active = this.state.activePoint;\r\n    if (points.length > 1 && active !== 0) {\r\n      points.splice(active, 1);\r\n      this.setState({points, activePoint: points.length-1});\r\n    }\r\n  };\r\n\r\n  reset(e) {\r\n    this.setState({\r\n      ctrl: false,\r\n      points: [],\r\n      activePoint: 0,\r\n      draggedPoint: false,\r\n      draggedCubic: false,\r\n      hasAnchor: false\r\n    });\r\n  };\r\n\r\n  parseReadOnlySvgs() {\r\n    const shapes = [];\r\n    for (let svg of this.state.readOnlySvgs) {\r\n      shapes.push(<path key={shapes.length} d={svg.path} className=\"buldreinfo-svg-opacity buldreinfo-svg-route\" strokeWidth={0.003*this.state.w} strokeDasharray={0.006*this.state.w}/>);\r\n      const commands = parseSVG(svg.path);\r\n      makeAbsolute(commands); // Note: mutates the commands in place!\r\n      shapes.push(this.generateSvgNrAndAnchor(commands, svg.nr, svg.hasAnchor));\r\n    }\r\n    return shapes;\r\n  }\r\n\r\n  generateSvgNrAndAnchor(path, nr, hasAnchor) {\r\n    var ixNr;\r\n    var maxY = 0;\r\n    var ixAnchor;\r\n    var minY = 99999999;\r\n    for (var i=0, len=path.length; i < len; i++) {\r\n      if (path[i].y > maxY) {\r\n        ixNr = i;\r\n        maxY = path[i].y;\r\n      }\r\n      if (path[i].y < minY) {\r\n        ixAnchor = i;\r\n        minY = path[i].y;\r\n      }\r\n    }\r\n    var x = path[ixNr].x;\r\n    var y = path[ixNr].y;\r\n    const r = 0.012*this.state.w;\r\n    if (x < r) x = r;\r\n    if (x > (this.state.w-r)) x = this.state.w-r;\r\n    if (y < r) y = r;\r\n    if (y > (this.state.h-r)) y = this.state.h-r;\r\n    var anchor = null;\r\n    if (hasAnchor) {\r\n      anchor = <circle className=\"buldreinfo-svg-ring\" cx={path[ixAnchor].x} cy={path[ixAnchor].y} r={0.006*this.state.w}/>\r\n    }\r\n    return (\r\n      <g className=\"buldreinfo-svg-opacity\">\r\n        <circle className=\"buldreinfo-svg-ring\" cx={x} cy={y} r={r}/>\r\n        <text className=\"buldreinfo-svg-routenr\" x={x} y={y} fontSize={0.02*this.state.w}>{nr}</text>\r\n        {anchor}\r\n      </g>\r\n    );\r\n  }\r\n\r\n  parsePath(d) {\r\n    if (d) {\r\n      const commands = parseSVG(d);\r\n      makeAbsolute(commands); // Note: mutates the commands in place!\r\n      return commands.map(c => {\r\n        switch (c.code) {\r\n          case \"L\": case \"M\": return { x: Math.round(c.x), y: Math.round(c.y) };\r\n          case \"C\": return { x: Math.round(c.x), y: Math.round(c.y), c: [{x: Math.round(c.x1), y: Math.round(c.y1)}, {x: Math.round(c.x2), y: Math.round(c.y2)}] };\r\n          case \"S\": return { x: Math.round(c.x), y: Math.round(c.y), c: [{x: Math.round(c.x0), y: Math.round(c.y0)}, {x: Math.round(c.x2), y: Math.round(c.y2)}] };\r\n        }\r\n      });\r\n    }\r\n    return [];\r\n  }\r\n\r\n  render() {\r\n    if (!this.state) {\r\n      return <center><FontAwesomeIcon icon=\"spinner\" spin size=\"3x\" /></center>;\r\n    }\r\n    else if (this.state.error) {\r\n      return <span><h3>{this.state.error.status}</h3>{this.state.error.toString()}</span>;\r\n    }\r\n    else if (this.state.pushUrl) {\r\n      return (<Redirect to={this.state.pushUrl} push />);\r\n    }\r\n\r\n    var circles = this.state.points.map((p, i, a) => {\r\n      var anchors = [];\r\n      if (p.c) {\r\n        anchors.push(\r\n          <g className=\"buldreinfo-svg-edit-opacity\">\r\n            <line className=\"buldreinfo-svg-pointer buldreinfo-svg-route\" x1={a[i-1].x} y1={a[i-1].y} x2={p.c[0].x} y2={p.c[0].y} strokeWidth={0.0026*this.state.w} strokeDasharray={0.003*this.state.w}/>\r\n            <line className=\"buldreinfo-svg-pointer buldreinfo-svg-route\" x1={p.x} y1={p.y} x2={p.c[1].x} y2={p.c[1].y} strokeWidth={0.0026*this.state.w} strokeDasharray={0.003*this.state.w}/>\r\n            <circle className=\"buldreinfo-svg-pointer buldreinfo-svg-ring\" cx={p.c[0].x} cy={p.c[0].y} r={0.003*this.state.w} onMouseDown={this.setDraggedCubic.bind(this, i, 0)}/>\r\n            <circle className=\"buldreinfo-svg-pointer buldreinfo-svg-ring\" cx={p.c[1].x} cy={p.c[1].y} r={0.003*this.state.w} onMouseDown={this.setDraggedCubic.bind(this, i, 1)}/>\r\n          </g>\r\n        );\r\n      }\r\n      return (\r\n        <g className={\"buldreinfo-svg-ring-group\" + (this.state.activePoint === i ? \"  is-active\" : \"\")}>\r\n          {anchors}\r\n          <circle className=\"buldreinfo-svg-pointer buldreinfo-svg-ring\" cx={p.x} cy={p.y} r={0.003*this.state.w} onMouseDown={this.setDraggedPoint.bind(this, i)}/>\r\n        </g>\r\n      );\r\n    });\r\n    const path = this.generatePath();\r\n    return (\r\n      <span>\r\n        <Breadcrumb>\r\n          <Link to={`/`}>Home</Link> / <Link to={`/browse`}>Browse</Link> / <Link to={`/area/${this.state.areaId}`}>{this.state.areaName}</Link> {this.state.areaVisibility===1 && <FontAwesomeIcon icon=\"lock\" />}{this.state.areaVisibility===2 && <FontAwesomeIcon icon=\"user-secret\" />} / <Link to={`/sector/${this.state.sectorId}`}>{this.state.sectorName}</Link> {this.state.sectorVisibility===1 && <FontAwesomeIcon icon=\"lock\" />}{this.state.sectorVisibility===2 && <FontAwesomeIcon icon=\"user-secret\" />} / <Link to={`/problem/${this.state.id}`}>{this.state.nr} {this.state.name} {this.state.grade}</Link> {this.state.visibility===1 && <FontAwesomeIcon icon=\"lock\" />}{this.state.visibility===2 && <FontAwesomeIcon icon=\"user-secret\" />}\r\n        </Breadcrumb>\r\n        <Well bsSize=\"small\" onMouseUp={this.cancelDragging.bind(this)} onMouseLeave={this.cancelDragging.bind(this)}>\r\n          <form onSubmit={this.save.bind(this)}>\r\n            <FormGroup controlId=\"formControlsInfo\">\r\n              <Alert bsStyle=\"info\">\r\n                <center>\r\n                  <strong>CTRL + CLICK</strong> to add a point | <strong>CLICK</strong> to select a point | <strong>CLICK AND DRAG</strong> to move a point<br/>\r\n                  <ButtonGroup>\r\n                    {this.state.activePoint !== 0 && (\r\n                      <DropdownButton title={!!this.state.points[this.state.activePoint].c? \"Selected point: Curve to\" : \"Selected point: Line to\"} id=\"bg-nested-dropdown\">\r\n                        <MenuItem eventKey=\"0\" onSelect={this.setPointType.bind(this, \"L\")}>Selected point: Line to</MenuItem>\r\n                        <MenuItem eventKey=\"1\" onSelect={this.setPointType.bind(this, \"C\")}>Selected point: Curve to</MenuItem>\r\n                      </DropdownButton>\r\n                    )}\r\n                    {this.state.activePoint !== 0 && (\r\n                      <Button onClick={this.removeActivePoint.bind(this)}>Remove this point</Button>\r\n                    )}\r\n                    <DropdownButton title={!!this.state.hasAnchor? \"Route has anchor\" : \"No anchor on route\"} disabled={this.state.points.length===0} id=\"bg-nested-dropdown\">\r\n                      <MenuItem eventKey=\"0\" onSelect={this.toggleAnchor.bind(this)}>No anchor on route</MenuItem>\r\n                      <MenuItem eventKey=\"1\" onSelect={this.toggleAnchor.bind(this)}>Route has anchor</MenuItem>\r\n                    </DropdownButton>\r\n                    <Button bsStyle=\"warning\" disabled={this.state.points.length===0} onClick={this.reset.bind(this)}>Reset path</Button>\r\n                    <Button bsStyle=\"danger\" onClick={this.onCancel.bind(this)}>Cancel</Button>\r\n                    <Button type=\"submit\" bsStyle=\"success\">{this.state.points.length>=2? 'Save' : 'Delete path'}</Button>\r\n                  </ButtonGroup>\r\n                </center>\r\n              </Alert>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsImage\">\r\n              <svg viewBox={\"0 0 \" + this.state.w + \" \" + this.state.h} onClick={this.addPoint.bind(this)} onMouseMove={this.handleMouseMove.bind(this)}>\r\n                <image ref=\"buldreinfo-svg-edit-img\" xlinkHref={config.getUrl(`images?id=${this.state.mediaId}`)} width=\"100%\" height=\"100%\"/>\r\n                {this.parseReadOnlySvgs()}\r\n                <path className=\"buldreinfo-svg-route\" d={path} strokeWidth={0.002*this.state.w}/>\r\n                {circles}\r\n              </svg>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsPath\">\r\n              {path}\r\n            </FormGroup>\r\n          </form>\r\n        </Well>\r\n      </span>\r\n    )\r\n  }\r\n}\r\n","module.exports = {\r\n  getUrl(str) {\r\n    if (window.location.hostname=='buldring.bergen-klatreklubb.no') {\r\n      return \"https://buldring.bergen-klatreklubb.no/com.buldreinfo.jersey.jaxb/v1/\" + str;\r\n    } else if (window.location.hostname=='buldring.fredrikstadklatreklubb.org') {\r\n      return \"https://buldring.fredrikstadklatreklubb.org/com.buldreinfo.jersey.jaxb/v1/\" + str;\r\n    } else if (window.location.hostname=='brattelinjer.no') {\r\n      return \"https://brattelinjer.no/com.buldreinfo.jersey.jaxb/v1/\" + str;\r\n    } else if (window.location.hostname=='dev.jossi.org') {\r\n      return \"https://dev.jossi.org/com.buldreinfo.jersey.jaxb/v1/\" + str;\r\n    } else {\r\n      return \"https://buldreinfo.com/com.buldreinfo.jersey.jaxb/v1/\" + str;\r\n    }\r\n  },\r\n\r\n  getTitle() {\r\n    if (window.location.hostname=='buldring.bergen-klatreklubb.no') {\r\n      return \"Buldring i Hordaland\";\r\n    } else if (window.location.hostname=='buldring.fredrikstadklatreklubb.org') {\r\n      return \"Buldring i Fredrikstad\";\r\n    } else if (window.location.hostname=='brattelinjer.no') {\r\n      return \"Bratte linjer\";\r\n    } else if (window.location.hostname=='dev.jossi.org') {\r\n      return \"Bratte linjer (dev)\";\r\n    } else {\r\n      return \"buldreinfo\";\r\n    }\r\n  },\r\n\r\n  getRegion() {\r\n    if (window.location.hostname=='buldring.bergen-klatreklubb.no') {\r\n      return \"2\";\r\n    } else if (window.location.hostname=='buldring.fredrikstadklatreklubb.org') {\r\n      return \"3\";\r\n    } else if (window.location.hostname=='brattelinjer.no') {\r\n      return \"4\";\r\n    } else if (window.location.hostname=='dev.jossi.org') {\r\n      return \"4\";\r\n    } else {\r\n      return \"1\";\r\n    }\r\n  },\r\n\r\n  getDefaultCenter() {\r\n    if (window.location.hostname=='buldring.bergen-klatreklubb.no') {\r\n      return {lat: 60.47521, lng: 6.83169};\r\n    } else if (window.location.hostname=='buldring.fredrikstadklatreklubb.org') {\r\n      return {lat: 59.22844, lng: 10.91722};\r\n    } else {\r\n      return {lat: 58.78119, lng: 5.86361};\r\n    }\r\n  },\r\n\r\n  getDefaultZoom() {\r\n    if (window.location.hostname=='brattelinjer.no') {\r\n      return 9;\r\n    } else if (window.location.hostname=='dev.jossi.org') {\r\n      return 9;\r\n    } else {\r\n      return 7;\r\n    }\r\n  },\r\n\r\n  convertFromDateToString(date) {\r\n    var d = date.getDate();\r\n    var m = date.getMonth() + 1;\r\n    var y = date.getFullYear();\r\n    return y + '-' + (m <= 9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d);\r\n  }\r\n}\r\n"],"sourceRoot":""}