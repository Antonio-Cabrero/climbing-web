{"version":3,"sources":["webpack:///./app/components/common/svg/svg-edit.js"],"names":["_react","__webpack_require__","s","f","i","_reactRouterDom","_reactBootstrap","_svgPathParser","c","u","_reactRouter","h","e","__esModule","default","SvgEdit","_this2","this","document","title","_config2","getTitle","_superagent2","get","getUrl","getRegion","props","match","params","problemId","withCredentials","end","err","res","setState","error","m","body","media","filter","x","id","mediaId","readOnlySvgs","svgId","points","svgs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","svg","value","parsePath","path","push","nr","hasAnchor","return","w","width","height","ctrl","activePoint","draggedPoint","draggedCubic","areaId","areaName","areaVisibility","sectorId","sectorName","sectorVisibility","name","grade","visibility","addEventListener","handleKeyDown","bind","handleKeyUp","removeEventListener","ctrlKey","key","anchor","window","history","back","event","_this3","preventDefault","post","state","send","delete","length","generatePath","pushUrl","dim","refs","getBoundingClientRect","dx","dy","Math","round","clientX","left","y","clientY","top","coords","getMouseCoords","d","forEach","p","q","a","rx","ry","rot","laf","sf","setPointCoords","setCubicCoords","active","index","v","splice","shapes","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_react2","createElement","className","strokeWidth","strokeDasharray","commands","parseSVG","makeAbsolute","generateSvgNrAndAnchor","ixNr","ixAnchor","maxY","minY","len","r","cx","cy","fontSize","map","code","x1","y1","x2","y2","x0","y0","_this4","_reactFontawesome2","icon","spin","size","status","toString","Redirect","to","circles","anchors","onMouseDown","setDraggedCubic","setDraggedPoint","Breadcrumb","Link","Well","bsSize","onMouseUp","cancelDragging","onMouseLeave","onSubmit","save","FormGroup","controlId","Alert","bsStyle","ButtonGroup","DropdownButton","MenuItem","eventKey","onSelect","setPointType","Button","onClick","removeActivePoint","disabled","setHasAnchor","reset","onCancel","type","viewBox","addPoint","onMouseMove","handleMouseMove","ref","xlinkHref","parseReadOnlySvgs"],"mappings":"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","file":"9.index.js","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { Well, FormGroup, MenuItem, ButtonGroup, Button, DropdownButton, Alert, Breadcrumb } from 'react-bootstrap';\r\nimport {parseSVG, makeAbsolute} from 'svg-path-parser';\r\nimport config from '../../../utils/config.js';\r\nimport Request from 'superagent';\r\nimport { Redirect } from 'react-router';\r\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\r\nimport { faSpinner, faLock, faUserSecret } from '@fortawesome/fontawesome-free-solid';\r\n\r\nexport default class SvgEdit extends Component {\r\n  componentDidMount() {\r\n    document.title=config.getTitle() + \" | Problem edit (SVG)\";\r\n    Request.get(config.getUrl(\"problems?regionId=\" + config.getRegion() + \"&id=\" + this.props.match.params.problemId)).withCredentials().end((err, res) => {\r\n      if (err) {\r\n        this.setState({error: err});\r\n      } else {\r\n        const m = res.body[0].media.filter(x => x.id==this.props.match.params.mediaId)[0];\r\n        const readOnlySvgs = [];\r\n        var svgId = 0;\r\n        var points = [];\r\n        if (m.svgs) {\r\n          for (let svg of m.svgs) {\r\n            if (svg.problemId===res.body[0].id) {\r\n              svgId = svg.id;\r\n              points = this.parsePath(svg.path);\r\n            }\r\n            else {\r\n              readOnlySvgs.push({ nr: svg.nr, hasAnchor: svg.hasAnchor, path: svg.path });\r\n            }\r\n          }\r\n        }\r\n        this.setState({\r\n          mediaId: m.id,\r\n          nr: res.body[0].nr,\r\n          w: m.width,\r\n          h: m.height,\r\n          ctrl: false,\r\n          svgId: svgId,\r\n          points: points,\r\n          readOnlySvgs: readOnlySvgs,\r\n          activePoint: 0,\r\n          draggedPoint: false,\r\n          draggedCubic: false,\r\n          hasAnchor: true,\r\n          areaId: res.body[0].areaId,\r\n          areaName: res.body[0].areaName,\r\n          areaVisibility: res.body[0].areaVisibility,\r\n          sectorId: res.body[0].sectorId,\r\n          sectorName: res.body[0].sectorName,\r\n          sectorVisibility: res.body[0].sectorVisibility,\r\n          id: res.body[0].id,\r\n          name: res.body[0].name,\r\n          grade: res.body[0].grade,\r\n          visibility: res.body[0].visibility\r\n        });\r\n      }\r\n    });\r\n    document.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\r\n    document.addEventListener(\"keyup\", this.handleKeyUp.bind(this));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown.bind(this));\r\n    document.removeEventListener(\"keyup\", this.handleKeyUp.bind(this));\r\n  }\r\n\r\n  handleKeyDown(e) {\r\n    if (e.ctrlKey) this.setState({ctrl: true});\r\n  };\r\n\r\n  handleKeyUp(e) {\r\n    if (!e.ctrlKey) this.setState({ctrl: false});\r\n  };\r\n\r\n  setHasAnchor(anchor) {\r\n    this.setState({hasAnchor: anchor});\r\n  }\r\n\r\n  onCancel() {\r\n    window.history.back();\r\n  }\r\n\r\n  save(event) {\r\n    event.preventDefault();\r\n    Request.post(config.getUrl(\"problems/svg?problemId=\" + this.state.id + \"&mediaId=\" + this.state.mediaId))\r\n    .withCredentials()\r\n    .send({delete: this.state.points.length<2, id: this.state.svgId, path: this.generatePath(), hasAnchor: this.state.hasAnchor})\r\n    .end((err, res) => {\r\n      if (err) {\r\n        this.setState({error: err});\r\n      } else {\r\n        this.setState({pushUrl: \"/problem/\" + this.state.id});\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelDragging(e) {\r\n    this.setState({\r\n      draggedPoint: false,\r\n      draggedCubic: false\r\n    });\r\n  }\r\n\r\n  getMouseCoords(e) {\r\n    const dim = this.refs[\"buldreinfo-svg-edit-img\"].getBoundingClientRect();\r\n    const dx = this.state.w/dim.width;\r\n    const dy = this.state.h/dim.height;\r\n    const x = Math.round((e.clientX - dim.left) * dx);\r\n    const y = Math.round((e.clientY - dim.top) * dy);\r\n    return {x, y};\r\n  };\r\n\r\n  addPoint(e) {\r\n    if (this.state.ctrl) {\r\n      let coords = this.getMouseCoords(e);\r\n      let points = this.state.points;\r\n      points.push(coords);\r\n      this.setState({\r\n        points,\r\n        activePoint: points.length - 1\r\n      });\r\n    }\r\n  };\r\n\r\n  generatePath() {\r\n    var d = \"\";\r\n    this.state.points.forEach((p, i) => {\r\n      if (i === 0) { // first point\r\n        d += \"M \";\r\n      } else if (p.q) { // quadratic\r\n        d += `Q ${ p.q.x } ${ p.q.y } `;\r\n      } else if (p.c) { // cubic\r\n        d += `C ${ p.c[0].x } ${ p.c[0].y } ${ p.c[1].x } ${ p.c[1].y } `;\r\n      } else if (p.a) { // arc\r\n        d += `A ${ p.a.rx } ${ p.a.ry } ${ p.a.rot } ${ p.a.laf } ${ p.a.sf } `;\r\n      } else {\r\n        d += \"L \";\r\n      }\r\n      d += `${ p.x } ${ p.y } `;\r\n    })\r\n    return d;\r\n  }\r\n\r\n  handleMouseMove(e) {\r\n    e.preventDefault();\r\n    if (!this.state.ctrl) {\r\n      if (this.state.draggedPoint) {\r\n        this.setPointCoords(this.getMouseCoords(e));\r\n      } else if (this.state.draggedCubic !== false) {\r\n        this.setCubicCoords(this.getMouseCoords(e), this.state.draggedCubic);\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  setPointCoords(coords) {\r\n    const points = this.state.points;\r\n    const active = this.state.activePoint;\r\n    points[active].x = coords.x;\r\n    points[active].y = coords.y;\r\n    this.setState({points});\r\n  };\r\n\r\n  setCubicCoords(coords, anchor) {\r\n    const points = this.state.points;\r\n    const active = this.state.activePoint;\r\n    points[active].c[anchor].x = coords.x;\r\n    points[active].c[anchor].y = coords.y;\r\n    this.setState({ points });\r\n  };\r\n\r\n  setDraggedPoint(index) {\r\n    if (!this.state.ctrl) {\r\n      this.setState({activePoint: index, draggedPoint: true});\r\n    }\r\n  };\r\n\r\n  setDraggedCubic(index, anchor) {\r\n    if (!this.state.ctrl) {\r\n      this.setState({activePoint: index, draggedCubic: anchor});\r\n    }\r\n  };\r\n\r\n  setPointType(v) {\r\n    const points = this.state.points;\r\n    const active = this.state.activePoint;\r\n    if (active !== 0) { // not the first point\r\n      switch (v) {\r\n        case \"L\":\r\n          points[active] = {x: points[active].x, y: points[active].y};\r\n          break;\r\n        case \"C\":\r\n          points[active] = {\r\n            x: points[active].x,\r\n            y: points[active].y,\r\n            c: [\r\n                {\r\n                  x: (points[active].x + points[active - 1].x - 50) / 2,\r\n                  y: (points[active].y + points[active - 1].y) / 2\r\n                },\r\n                {\r\n                  x: (points[active].x + points[active - 1].x + 50) / 2,\r\n                  y: (points[active].y + points[active - 1].y) / 2\r\n                }\r\n            ]\r\n          };\r\n        break;\r\n      }\r\n      this.setState({points});\r\n    }\r\n  };\r\n\r\n  removeActivePoint(e) {\r\n    let points = this.state.points;\r\n    let active = this.state.activePoint;\r\n    if (points.length > 1 && active !== 0) {\r\n      points.splice(active, 1);\r\n      this.setState({points, activePoint: points.length-1});\r\n    }\r\n  };\r\n\r\n  reset(e) {\r\n    this.setState({\r\n      ctrl: false,\r\n      points: [],\r\n      activePoint: 0,\r\n      draggedPoint: false,\r\n      draggedCubic: false,\r\n      hasAnchor: false\r\n    });\r\n  };\r\n\r\n  parseReadOnlySvgs() {\r\n    const shapes = [];\r\n    for (let svg of this.state.readOnlySvgs) {\r\n      shapes.push(<path key={shapes.length} d={svg.path} className=\"buldreinfo-svg-opacity buldreinfo-svg-route\" strokeWidth={0.003*this.state.w} strokeDasharray={0.006*this.state.w}/>);\r\n      const commands = parseSVG(svg.path);\r\n      makeAbsolute(commands); // Note: mutates the commands in place!\r\n      shapes.push(this.generateSvgNrAndAnchor(commands, svg.nr, svg.hasAnchor));\r\n    }\r\n    return shapes;\r\n  }\r\n\r\n  generateSvgNrAndAnchor(path, nr, hasAnchor) {\r\n    var ixNr;\r\n    var maxY = 0;\r\n    var ixAnchor;\r\n    var minY = 99999999;\r\n    for (var i=0, len=path.length; i < len; i++) {\r\n      if (path[i].y > maxY) {\r\n        ixNr = i;\r\n        maxY = path[i].y;\r\n      }\r\n      if (path[i].y < minY) {\r\n        ixAnchor = i;\r\n        minY = path[i].y;\r\n      }\r\n    }\r\n    var x = path[ixNr].x;\r\n    var y = path[ixNr].y;\r\n    const r = 0.012*this.state.w;\r\n    if (x < r) x = r;\r\n    if (x > (this.state.w-r)) x = this.state.w-r;\r\n    if (y < r) y = r;\r\n    if (y > (this.state.h-r)) y = this.state.h-r;\r\n    var anchor = null;\r\n    if (hasAnchor === true) {\r\n      anchor = <circle className=\"buldreinfo-svg-ring\" cx={path[ixAnchor].x} cy={path[ixAnchor].y} r={0.006*this.state.w}/>\r\n    }\r\n    return (\r\n      <g className=\"buldreinfo-svg-opacity\">\r\n        <circle className=\"buldreinfo-svg-ring\" cx={x} cy={y} r={r}/>\r\n        <text className=\"buldreinfo-svg-routenr\" x={x} y={y} fontSize={0.02*this.state.w}>{nr}</text>\r\n        {anchor}\r\n      </g>\r\n    );\r\n  }\r\n\r\n  parsePath(d) {\r\n    if (d) {\r\n      const commands = parseSVG(d);\r\n      makeAbsolute(commands); // Note: mutates the commands in place!\r\n      return commands.map(c => {\r\n        switch (c.code) {\r\n          case \"L\": case \"M\": return { x: Math.round(c.x), y: Math.round(c.y) };\r\n          case \"C\": return { x: Math.round(c.x), y: Math.round(c.y), c: [{x: Math.round(c.x1), y: Math.round(c.y1)}, {x: Math.round(c.x2), y: Math.round(c.y2)}] };\r\n          case \"S\": return { x: Math.round(c.x), y: Math.round(c.y), c: [{x: Math.round(c.x0), y: Math.round(c.y0)}, {x: Math.round(c.x2), y: Math.round(c.y2)}] };\r\n        }\r\n      });\r\n    }\r\n    return [];\r\n  }\r\n\r\n  render() {\r\n    if (!this.state) {\r\n      return <center><FontAwesomeIcon icon=\"spinner\" spin size=\"3x\" /></center>;\r\n    }\r\n    else if (this.state.error) {\r\n      return <span><h3>{this.state.error.status}</h3>{this.state.error.toString()}</span>;\r\n    }\r\n    else if (this.state.pushUrl) {\r\n      return (<Redirect to={this.state.pushUrl} push />);\r\n    }\r\n\r\n    var circles = this.state.points.map((p, i, a) => {\r\n      var anchors = [];\r\n      if (p.c) {\r\n        anchors.push(\r\n          <g className=\"buldreinfo-svg-edit-opacity\">\r\n            <line className=\"buldreinfo-svg-pointer buldreinfo-svg-route\" x1={a[i-1].x} y1={a[i-1].y} x2={p.c[0].x} y2={p.c[0].y} strokeWidth={0.0026*this.state.w} strokeDasharray={0.003*this.state.w}/>\r\n            <line className=\"buldreinfo-svg-pointer buldreinfo-svg-route\" x1={p.x} y1={p.y} x2={p.c[1].x} y2={p.c[1].y} strokeWidth={0.0026*this.state.w} strokeDasharray={0.003*this.state.w}/>\r\n            <circle className=\"buldreinfo-svg-pointer buldreinfo-svg-ring\" cx={p.c[0].x} cy={p.c[0].y} r={0.003*this.state.w} onMouseDown={this.setDraggedCubic.bind(this, i, 0)}/>\r\n            <circle className=\"buldreinfo-svg-pointer buldreinfo-svg-ring\" cx={p.c[1].x} cy={p.c[1].y} r={0.003*this.state.w} onMouseDown={this.setDraggedCubic.bind(this, i, 1)}/>\r\n          </g>\r\n        );\r\n      }\r\n      return (\r\n        <g className={\"buldreinfo-svg-ring-group\" + (this.state.activePoint === i ? \"  is-active\" : \"\")}>\r\n          {anchors}\r\n          <circle className=\"buldreinfo-svg-pointer buldreinfo-svg-ring\" cx={p.x} cy={p.y} r={0.003*this.state.w} onMouseDown={this.setDraggedPoint.bind(this, i)}/>\r\n        </g>\r\n      );\r\n    });\r\n    const path = this.generatePath();\r\n    return (\r\n      <span>\r\n        <Breadcrumb>\r\n          <Link to={`/`}>Home</Link> / <Link to={`/browse`}>Browse</Link> / <Link to={`/area/${this.state.areaId}`}>{this.state.areaName}</Link> {this.state.areaVisibility===1 && <FontAwesomeIcon icon=\"lock\" />}{this.state.areaVisibility===2 && <FontAwesomeIcon icon=\"user-secret\" />} / <Link to={`/sector/${this.state.sectorId}`}>{this.state.sectorName}</Link> {this.state.sectorVisibility===1 && <FontAwesomeIcon icon=\"lock\" />}{this.state.sectorVisibility===2 && <FontAwesomeIcon icon=\"user-secret\" />} / <Link to={`/problem/${this.state.id}`}>{this.state.nr} {this.state.name} {this.state.grade}</Link> {this.state.visibility===1 && <FontAwesomeIcon icon=\"lock\" />}{this.state.visibility===2 && <FontAwesomeIcon icon=\"user-secret\" />}\r\n        </Breadcrumb>\r\n        <Well bsSize=\"small\" onMouseUp={this.cancelDragging.bind(this)} onMouseLeave={this.cancelDragging.bind(this)}>\r\n          <form onSubmit={this.save.bind(this)}>\r\n            <FormGroup controlId=\"formControlsInfo\">\r\n              <Alert bsStyle=\"info\">\r\n                <center>\r\n                  <strong>CTRL + CLICK</strong> to add a point | <strong>CLICK</strong> to select a point | <strong>CLICK AND DRAG</strong> to move a point<br/>\r\n                  <ButtonGroup>\r\n                    {this.state.activePoint !== 0 && (\r\n                      <DropdownButton title={!!this.state.points[this.state.activePoint].c? \"Selected point: Curve to\" : \"Selected point: Line to\"} id=\"bg-nested-dropdown\">\r\n                        <MenuItem eventKey=\"0\" onSelect={this.setPointType.bind(this, \"L\")}>Selected point: Line to</MenuItem>\r\n                        <MenuItem eventKey=\"1\" onSelect={this.setPointType.bind(this, \"C\")}>Selected point: Curve to</MenuItem>\r\n                      </DropdownButton>\r\n                    )}\r\n                    {this.state.activePoint !== 0 && (\r\n                      <Button onClick={this.removeActivePoint.bind(this)}>Remove this point</Button>\r\n                    )}\r\n                    <DropdownButton title={this.state.hasAnchor === true? \"Route has anchor\" : \"No anchor on route\"} disabled={this.state.points.length===0} id=\"bg-nested-dropdown\">\r\n                      <MenuItem eventKey=\"0\" onSelect={this.setHasAnchor.bind(this, false)}>No anchor on route</MenuItem>\r\n                      <MenuItem eventKey=\"1\" onSelect={this.setHasAnchor.bind(this, true)}>Route has anchor</MenuItem>\r\n                    </DropdownButton>\r\n                    <Button bsStyle=\"warning\" disabled={this.state.points.length===0} onClick={this.reset.bind(this)}>Reset path</Button>\r\n                    <Button bsStyle=\"danger\" onClick={this.onCancel.bind(this)}>Cancel</Button>\r\n                    <Button type=\"submit\" bsStyle=\"success\">{this.state.points.length>=2? 'Save' : 'Delete path'}</Button>\r\n                  </ButtonGroup>\r\n                </center>\r\n              </Alert>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsImage\">\r\n              <svg viewBox={\"0 0 \" + this.state.w + \" \" + this.state.h} onClick={this.addPoint.bind(this)} onMouseMove={this.handleMouseMove.bind(this)}>\r\n                <image ref=\"buldreinfo-svg-edit-img\" xlinkHref={config.getUrl(`images?id=${this.state.mediaId}`)} width=\"100%\" height=\"100%\"/>\r\n                {this.parseReadOnlySvgs()}\r\n                <path className=\"buldreinfo-svg-route\" d={path} strokeWidth={0.002*this.state.w}/>\r\n                {circles}\r\n              </svg>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsPath\">\r\n              {path}\r\n            </FormGroup>\r\n          </form>\r\n        </Well>\r\n      </span>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}