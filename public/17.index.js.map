{"version":3,"sources":["webpack:///./app/components/problem-edit-media.js","webpack:///./app/components/common/image-upload/image-upload.js"],"names":["_react","__webpack_require__","o","f","r","l","_reactRouter","u","_reactBootstrap","c","d","h","e","__esModule","default","ProblemEditMedia","Component","_this2","this","Request","get","config","getUrl","getRegion","props","match","params","problemId","withCredentials","end","err","res","setState","error","id","body","newMedia","event","_this3","preventDefault","isSaving","state","map","m","name","file","replace","photographer","inPhoto","req","post","field","JSON","stringify","set","forEach","attach","pushUrl","window","history","back","_react2","createElement","status","toString","Redirect","to","push","_reactMetaTags2","getTitle","content","Well","onSubmit","save","bind","FormGroup","controlId","_imageUpload2","onMediaChanged","onNewMediaChanged","ButtonGroup","Button","bsStyle","onClick","onCancel","type","disabled","_reactFontawesome2","icon","spin","size","t","i","s","TypeError","ReferenceError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","Text","_classCallCheck","_this","_possibleConstructorReturn","getPrototypeOf","call","searchResults","nextProps","target","onValueChanged","length","console","log","sr","filter","toUpperCase","user","rows","MenuItem","key","href","onSelect","menuItemSelect","className","style","position","display","width","FormControl","placeholder","onChange","inputChange","ImageUpload","_this4","media","files","allMedia","toRemove","_this5","ControlLabel","_reactDropzone2","onDrop","height","padding","borderWidth","borderColor","borderStyle","borderRadius","accept","Grid","Row","Col","xs","sm","md","lg","Thumbnail","src","preview","onInPhotoChanged","onPhotographerChanged","onRemove"],"mappings":"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","file":"17.index.js","sourcesContent":["import React, {Component} from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\nimport { Link } from 'react-router-dom';\r\nimport { Redirect } from 'react-router'\r\nimport Request from 'superagent';\r\nimport { FormGroup, ControlLabel, FormControl, ButtonGroup, Button, DropdownButton, MenuItem, Well } from 'react-bootstrap';\r\nimport ImageUpload from './common/image-upload/image-upload';\r\nimport config from '../utils/config.js';\r\nimport auth from '../utils/auth.js';\r\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\r\n\r\nexport default class ProblemEditMedia extends Component {\r\n  componentDidMount() {\r\n    Request.get(config.getUrl(\"problems?regionId=\" + config.getRegion() + \"&id=\" + this.props.match.params.problemId)).withCredentials().end((err, res) => {\r\n      if (err) {\r\n        this.setState({error: err});\r\n      } else {\r\n        this.setState({\r\n          id: res.body[0].id,\r\n          newMedia: []\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onNewMediaChanged(newMedia) {\r\n    this.setState({newMedia: newMedia});\r\n  }\r\n\r\n  save(event) {\r\n    event.preventDefault();\r\n    this.setState({isSaving: true});\r\n    const newMedia = this.state.newMedia.map(m => {return {name: m.file.name.replace(/[^-a-z0-9.]/ig,'_'), photographer: m.photographer, inPhoto: m.inPhoto}});\r\n    var req = Request.post(config.getUrl(\"problems/media\"))\r\n    .withCredentials()\r\n    .field('json', JSON.stringify({id: this.state.id, newMedia: newMedia}))\r\n    .set('Accept', 'application/json');\r\n    this.state.newMedia.forEach(m => req.attach(m.file.name.replace(/[^-a-z0-9.]/ig,'_'), m.file));\r\n    req.end((err, res) => {\r\n      if (err) {\r\n        this.setState({error: err});\r\n      } else {\r\n        this.setState({pushUrl: \"/problem/\" + res.body.id});\r\n      }\r\n    });\r\n  }\r\n\r\n  onCancel() {\r\n    window.history.back();\r\n  }\r\n\r\n  render() {\r\n    if (!this.state || !this.state.id) {\r\n      return <center><FontAwesomeIcon icon=\"spinner\" spin size=\"3x\" /></center>;\r\n    }\r\n    else if (this.state.error) {\r\n      return <span><h3>{this.state.error.status}</h3>{this.state.error.toString()}</span>;\r\n    }\r\n    else if (this.state.pushUrl) {\r\n      return (<Redirect to={this.state.pushUrl} push />);\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        <MetaTags>\r\n          <title>{config.getTitle(\"Problem edit (media)\")}</title>\r\n          <meta name=\"description\" content={\"Add new media\"} />\r\n        </MetaTags>\r\n        <Well>\r\n          <form onSubmit={this.save.bind(this)}>\r\n            <FormGroup controlId=\"formControlsMedia\">\r\n              <ImageUpload onMediaChanged={this.onNewMediaChanged.bind(this)} />\r\n            </FormGroup>\r\n            <ButtonGroup><Button bsStyle=\"danger\" onClick={this.onCancel.bind(this)}>Cancel</Button><Button type=\"submit\" bsStyle=\"success\" disabled={this.state.isSaving}>{this.state.isSaving? 'Saving...' : 'Save'}</Button></ButtonGroup>\r\n          </form>\r\n        </Well>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport Request from 'superagent';\r\nimport { Grid, Row, Col, Thumbnail, MenuItem, Button, FormControl, FormGroup, ControlLabel } from 'react-bootstrap';\r\nimport config from '../../../utils/config.js';\r\n\r\nclass Text extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {searchResults: [], value: ''};\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({value: nextProps.value});\r\n  }\r\n\r\n  inputChange(e) {\r\n    const value = e.target.value;\r\n    this.props.onValueChanged(this.props.m, value);\r\n    if (value.length>0) {\r\n      Request.get(config.getUrl(\"users/search?value=\" + value)).withCredentials().end((err, res) => {\r\n        if (err) {\r\n          console.log(err);\r\n        }\r\n        const sr = res.body.filter(u => u.name.toUpperCase() !== value.toUpperCase());\r\n        this.setState({searchResults: sr});\r\n      });\r\n    }\r\n    else {\r\n      this.setState({searchResults: []});\r\n    }\r\n  }\r\n\r\n  menuItemSelect(user, event) {\r\n    this.setState({searchResults: []});\r\n    this.props.onValueChanged(this.props.m, user.name);\r\n  }\r\n\r\n  render() {\r\n    var searchResults = null;\r\n    if (this.state.searchResults.length>0) {\r\n      const rows = this.state.searchResults.map((u, i) => <MenuItem key={i} href=\"#\" onSelect={this.menuItemSelect.bind(this, u)}>{u.name}</MenuItem>);\r\n      searchResults=(\r\n        <div>\r\n          <ul className=\"dropdown-menu open\" style={{position: 'absolute', display: 'inline'}}>\r\n            {rows}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div style={{position: 'relative', width: '100%'}}>\r\n        <div style={{width: '100%'}}>\r\n          <FormControl style={{display: 'inline-block'}} type=\"text\" placeholder={this.props.placeholder} value={this.state.value} onChange={this.inputChange.bind(this)} />\r\n        </div>\r\n        {searchResults}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class ImageUpload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {media: []};\r\n  }\r\n\r\n  onDrop(files) {\r\n    const allMedia = this.state.media;\r\n    files.forEach(f => allMedia.push({file: f}));\r\n    this.setState({media: allMedia});\r\n    this.props.onMediaChanged(allMedia);\r\n  }\r\n\r\n  onPhotographerChanged(m, name) {\r\n    m.photographer=name;\r\n    this.props.onMediaChanged(this.state.media);\r\n  }\r\n\r\n  onInPhotoChanged(m, name) {\r\n    m.inPhoto=name;\r\n    this.props.onMediaChanged(this.state.media);\r\n  }\r\n\r\n  onRemove(toRemove) {\r\n    const allMedia = this.state.media.filter(m => m!=toRemove);\r\n    this.setState({media: allMedia});\r\n    this.props.onMediaChanged(allMedia);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FormGroup>\r\n        <ControlLabel>Upload image(s)</ControlLabel><br/>\r\n        <Dropzone\r\n          onDrop={this.onDrop.bind(this)}\r\n          style={{width: '220px', height: '75px', padding: '15px', borderWidth: '1px', borderColor: '#666', borderStyle: 'dashed', borderRadius: '5px'}}\r\n          accept={'image/*'}>\r\n          <i>Drop JPG-image(s) here or click to select files to upload.</i>\r\n        </Dropzone>\r\n        {this.state.media.length > 0 ?\r\n          <Grid>\r\n            <Row>\r\n              {this.state.media.map((m, i) =>\r\n                <Col key={i} xs={8} sm={6} md={4} lg={2}>\r\n                  <Thumbnail src={m.file.preview}>\r\n                    <Text m={m} placeholder='In photo' value={m? m.inPhoto : ''}  onValueChanged={this.onInPhotoChanged.bind(this)} />\r\n                    <Text m={m} placeholder='Photographer' value={m? m.photographer : ''} onValueChanged={this.onPhotographerChanged.bind(this)} />\r\n                    <Button style={{width: '100%'}} bsStyle='danger' onClick={this.onRemove.bind(this, m)}>Remove</Button>\r\n                  </Thumbnail>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </Grid>\r\n          : null}\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}