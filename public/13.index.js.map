{"version":3,"sources":["webpack:///./app/components/recover.js"],"names":["_react","__webpack_require__","o","f","n","s","_reactRouter","u","_reactBootstrap","d","c","e","__esModule","default","Recover","props","this","_this","__proto__","Object","getPrototypeOf","call","state","password","password2","Component","setState","token","match","params","event","_this2","preventDefault","validatePassword","validatePassword2","message","_react2","createElement","Panel","bsStyle","Request","get","config","getUrl","withCredentials","end","err","res","error","pushUrl","key","value","target","length","status","toString","Redirect","to","push","_reactMetaTags2","getTitle","Well","onSubmit","recover","bind","FormGroup","controlId","validationState","ControlLabel","FormControl","type","placeholder","onChange","onPasswordChanged","Feedback","HelpBlock","onConfirmPasswordChanged","ButtonGroup","Button","_reactFontawesome2","icon","spin","size","t"],"mappings":"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","file":"13.index.js","sourcesContent":["import React, {Component} from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\nimport { Link } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport Request from 'superagent';\r\nimport { FormGroup, ControlLabel, FormControl, HelpBlock, ButtonGroup, Button, Panel, Well } from 'react-bootstrap';\r\nimport auth from '../utils/auth.js';\r\nimport config from '../utils/config.js';\r\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/fontawesome-free-solid';\r\n\r\nexport default class Recover extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      password: '',\r\n      password2: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({token: this.props.match.params.token});\r\n  }\r\n\r\n  recover(event) {\r\n    event.preventDefault();\r\n    if (this.validatePassword(null)==='error' || this.validatePassword2(null)==='error') {\r\n      this.setState({message: <Panel bsStyle='danger'>Invalid password.</Panel>});\r\n    } else {\r\n      Request.get(config.getUrl(\"users/password?token=\" + this.state.token + \"&password=\" + this.state.password)).withCredentials().end((err, res) => {\r\n        if (err) {\r\n          this.setState({error: err});\r\n        } else {\r\n          this.setState({error: null, pushUrl: \"/login\"});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onPasswordChanged(e) {\r\n    this.setState({password: e.target.value});\r\n  }\r\n\r\n  onConfirmPasswordChanged(e) {\r\n    this.setState({password2: e.target.value});\r\n  }\r\n\r\n  validatePassword() {\r\n    if (this.state.password.length < 8) {\r\n      return 'error';\r\n    }\r\n    return 'success';\r\n  }\r\n\r\n  validatePassword2() {\r\n    if (this.state.password2.length < 8 || this.state.password!=this.state.password2) {\r\n      return 'error';\r\n    }\r\n    return 'success';\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.token) {\r\n      return <center><FontAwesomeIcon icon=\"spinner\" spin size=\"3x\" /></center>;\r\n    }\r\n    else if (this.state.error) {\r\n      return <span><h3>{this.state.error.status}</h3>{this.state.error.toString()}</span>;\r\n    }\r\n    else if (this.state.pushUrl) {\r\n      return (<Redirect to={this.state.pushUrl} push />);\r\n    }\r\n    return (\r\n      <span>\r\n        <MetaTags>\r\n          <title>{config.getTitle(\"Reset password\")}</title>\r\n        </MetaTags>\r\n        <Well>\r\n          <form onSubmit={this.recover.bind(this)}>\r\n            <FormGroup controlId=\"formControlsPassword\" validationState={this.validatePassword()}>\r\n              <ControlLabel>New password</ControlLabel>\r\n              <FormControl type=\"password\" placeholder=\"Enter new password\" onChange={this.onPasswordChanged.bind(this)} />\r\n              <FormControl.Feedback />\r\n              <HelpBlock>At least 8 characters.</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsPassword2\" validationState={this.validatePassword2()}>\r\n              <ControlLabel>Confirm new password</ControlLabel>\r\n              <FormControl type=\"password\" placeholder=\"Confirm new password\" onChange={this.onConfirmPasswordChanged.bind(this)} />\r\n              <FormControl.Feedback />\r\n              <HelpBlock>Must match password field.</HelpBlock>\r\n            </FormGroup>\r\n            <ButtonGroup>\r\n              <Button type=\"submit\" bsStyle=\"success\">Reset password</Button>\r\n            </ButtonGroup>\r\n          </form>\r\n        </Well>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}