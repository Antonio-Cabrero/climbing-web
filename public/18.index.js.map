{"version":3,"sources":["webpack:///./app/components/login.js"],"names":["_react","__webpack_require__","s","h","r","o","l","_reactRouterDom","_reactRouter","c","_reactRouterBootstrap","_reactBootstrap","m","p","e","__esModule","default","Login","props","this","_this","__proto__","Object","getPrototypeOf","call","state","message","username","password","Component","email","test","event","_this2","validateEmail","Request","get","config","getUrl","window","location","hostname","withCredentials","end","err","res","setState","_react2","createElement","Panel","bsStyle","toString","key","value","_this3","preventDefault","auth","login","loggedIn","pushUrl","target","Redirect","to","push","_reactMetaTags2","getTitle","Breadcrumb","Link","color","Well","onSubmit","bind","FormGroup","controlId","ControlLabel","FormControl","type","placeholder","onChange","onUsernameChanged","onPasswordChanged","ButtonGroup","LinkContainer","Button","onClick","forgotPasswordClick","t","contextTypes","router","PropTypes","object"],"mappings":"qYAAAA,EAAAC,EAAA,GAAAC,EAAAC,EAAAC,GAAAC,EAAAF,EACAF,EAAA,MAAAK,EAAAH,EACAF,EAAA,IACAM,EAAAN,EAAA,KACAO,EAAAP,EAAA,KAAAQ,EAAAN,EACAF,EAAA,MACAS,EAAAT,EAAA,KACAU,EAAAV,EAAA,KAAAW,EAAAT,EACAF,EAAA,MAAAY,EAAAV,EACAF,EAAA,eAAAE,EAAAW,GAAA,OAAAA,KAAAC,WAAAD,GAAAE,QAAAF,GAAA,IAEqBG,cACnB,SAAAA,EAAYC,iGAAOC,KAAAF,GAAA,IAAAG,oKAAAD,MAAAF,EAAAI,WAAAC,OAAAC,eAAAN,IAAAO,KAAAL,KACXD,IADW,OAEjBE,EAAKK,OACHC,QAAS,KACTC,SAAU,GACVC,SAAU,IALKR,qUADcS,sDAUnBC,GAEZ,MADS,yJACCC,KAAKD,+CAGGE,GAAO,IAAAC,EAAAd,KACpBA,KAAKM,MAAME,SAEJR,KAAKe,cAAcf,KAAKM,MAAME,UAGxCQ,UAAQC,IAAIC,UAAOC,OAAO,iCAAmCnB,KAAKM,MAAME,SAAW,aAAeY,OAAOC,SAASC,WAAWC,kBAAkBC,IAAI,SAACC,EAAKC,GACnJD,EACFX,EAAKa,UAAUpB,QAASqB,EAAA/B,QAAAgC,cAACrC,EAAAsC,OAAMC,QAAQ,UAAUN,EAAIO,cAErDlB,EAAKa,UAAUpB,QAASqB,EAAA/B,QAAAgC,cAACrC,EAAAsC,OAAMC,QAAQ,WAAf,kEAA8FjB,EAAKR,MAAME,SAAzG,UAN5BR,KAAK2B,UAAUpB,QAASqB,EAAA/B,QAAAgC,cAACrC,EAAAsC,OAAMC,QAAQ,UAAf,mCAA8D/B,KAAKM,MAAME,SAAzE,0EAFxBR,KAAK2B,UAAUpB,QAASqB,EAAA/B,QAAAgC,cAACrC,EAAAsC,OAAMC,QAAQ,UAAf,8DAAAE,IAAA,QAAAC,MAAA,SActBrB,GAAO,IAAAsB,EAAAnC,KACXa,EAAMuB,iBACNC,UAAKC,MAAMtC,KAAKM,MAAME,SAAUR,KAAKM,MAAMG,SAAU,SAAC8B,GAEpD,OADqBJ,EAAKpC,MAAlBsB,SACHkB,EAGIJ,EAAKR,UAAUpB,QAAS,KAAMiC,QAAS,MAFvCL,EAAKR,UAAUpB,QAASqB,EAAA/B,QAAAgC,cAACrC,EAAAsC,OAAMC,QAAQ,UAAf,4CAAAE,IAAA,oBAAAC,MAAA,SAOnBvC,GAChBK,KAAK2B,UAAUnB,SAAUb,EAAE8C,OAAOP,kDAGlBvC,GAChBK,KAAK2B,UAAUlB,SAAUd,EAAE8C,OAAOP,yCAIlC,OAAIlC,KAAKM,OAASN,KAAKM,MAAMkC,QACnBZ,EAAA/B,QAAAgC,cAACxC,EAAAqD,UAASC,GAAI3C,KAAKM,MAAMkC,QAASI,UAG1ChB,EAAA/B,QAAAgC,cAAA,YACED,EAAA/B,QAAAgC,cAACgB,EAAAhD,QAAD,KACE+B,EAAA/B,QAAAgC,cAAA,aAAQX,UAAO4B,SAAS,WAE1BlB,EAAA/B,QAAAgC,cAACrC,EAAAuD,WAAD,KACEnB,EAAA/B,QAAAgC,cAACzC,EAAA4D,MAAKL,GAAA,KAAN,QADF,MAC+Bf,EAAA/B,QAAAgC,cAAA,QAAMoB,MAAM,QAAZ,YAE/BrB,EAAA/B,QAAAgC,cAACrC,EAAA0D,KAAD,KACGlD,KAAKM,MAAMC,QACZqB,EAAA/B,QAAAgC,cAAA,QAAMsB,SAAUnD,KAAKsC,MAAMc,KAAKpD,OAC9B4B,EAAA/B,QAAAgC,cAACrC,EAAA6D,WAAUC,UAAU,oBACnB1B,EAAA/B,QAAAgC,cAACrC,EAAA+D,aAAD,iBACA3B,EAAA/B,QAAAgC,cAACrC,EAAAgE,aAAYC,KAAK,OAAOC,YAAY,iBAAiBC,SAAU3D,KAAK4D,kBAAkBR,KAAKpD,SAE9F4B,EAAA/B,QAAAgC,cAACrC,EAAA6D,WAAUC,UAAU,wBACnB1B,EAAA/B,QAAAgC,cAACrC,EAAA+D,aAAD,iBACA3B,EAAA/B,QAAAgC,cAACrC,EAAAgE,aAAYC,KAAK,WAAWC,YAAY,iBAAiBC,SAAU3D,KAAK6D,kBAAkBT,KAAKpD,SAElG4B,EAAA/B,QAAAgC,cAACrC,EAAAsE,YAAD,KACElC,EAAA/B,QAAAgC,cAACtC,EAAAwE,eAAcpB,GAAA,aAAiBf,EAAA/B,QAAAgC,cAACrC,EAAAwE,QAAOjC,QAAQ,WAAhB,sBAChCH,EAAA/B,QAAAgC,cAACrC,EAAAwE,QAAOjC,QAAQ,UAAUkC,QAASjE,KAAKkE,oBAAoBd,KAAKpD,OAAjE,mBACA4B,EAAA/B,QAAAgC,cAACrC,EAAAwE,QAAOP,KAAK,SAAS1B,QAAQ,WAA9B,iBAAAoC,EA7EOrE,GA6EPqE,EAAAtE,QA7EOC,EAsFrBA,EAAMsE,cACJC,OAAQC,UAAUC","file":"18.index.js","sourcesContent":["import React, {Component} from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport Request from 'superagent';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { FormGroup, ControlLabel, FormControl, ButtonGroup, Button, Panel, Breadcrumb, Well } from 'react-bootstrap';\r\nimport auth from '../utils/auth.js'\r\nimport config from '../utils/config.js';\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: null,\r\n      username: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  validateEmail(email) {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n\r\n  forgotPasswordClick(event) {\r\n    if (!this.state.username) {\r\n      this.setState({message: <Panel bsStyle='danger'>Please fill username and click Forgot password again.</Panel>});\r\n    } else if (!this.validateEmail(this.state.username)) {\r\n      this.setState({message: <Panel bsStyle='danger'>No email address registered on &quot;{this.state.username}&quot;. Contact Jostein (jostein.oygarden@gmail.com) to recover password.</Panel>});\r\n    } else {\r\n      Request.get(config.getUrl(\"users/forgotPassword?username=\" + this.state.username + \"&hostname=\" + window.location.hostname)).withCredentials().end((err, res) => {\r\n        if (err) {\r\n          this.setState({message: <Panel bsStyle='danger'>{err.toString()}</Panel>});\r\n        } else {\r\n          this.setState({message: <Panel bsStyle='success'>An e-mail with instructions to reset your password is sent to &quot;{this.state.username}&quot;.</Panel>});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  login(event) {\r\n    event.preventDefault();\r\n    auth.login(this.state.username, this.state.password, (loggedIn) => {\r\n      const { location } = this.props\r\n      if (!loggedIn) {\r\n        return this.setState({message: <Panel bsStyle='danger'>Invalid username and/or password.</Panel>});\r\n      } else {\r\n        return this.setState({message: null, pushUrl: \"/\"});\r\n      }\r\n    });\r\n  }\r\n\r\n  onUsernameChanged(e) {\r\n    this.setState({username: e.target.value});\r\n  }\r\n\r\n  onPasswordChanged(e) {\r\n    this.setState({password: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    if (this.state && this.state.pushUrl) {\r\n      return (<Redirect to={this.state.pushUrl} push />);\r\n    }\r\n    return (\r\n      <span>\r\n        <MetaTags>\r\n          <title>{config.getTitle(\"Login\")}</title>\r\n        </MetaTags>\r\n        <Breadcrumb>\r\n          <Link to={`/`}>Home</Link> / <font color='#777'>Sign in</font>\r\n        </Breadcrumb>\r\n        <Well>\r\n          {this.state.message}\r\n          <form onSubmit={this.login.bind(this)}>\r\n            <FormGroup controlId=\"formControlsText\">\r\n              <ControlLabel>Username</ControlLabel>\r\n              <FormControl type=\"text\" placeholder=\"Enter username\" onChange={this.onUsernameChanged.bind(this)} />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsPassword\">\r\n              <ControlLabel>Password</ControlLabel>\r\n              <FormControl type=\"password\" placeholder=\"Enter password\" onChange={this.onPasswordChanged.bind(this)} />\r\n            </FormGroup>\r\n            <ButtonGroup>\r\n              <LinkContainer to={`/register`}><Button bsStyle=\"default\">Register new user</Button></LinkContainer>\r\n              <Button bsStyle=\"default\" onClick={this.forgotPasswordClick.bind(this)}>Forgot password</Button>\r\n              <Button type=\"submit\" bsStyle=\"success\">Login</Button>\r\n            </ButtonGroup>\r\n          </form>\r\n        </Well>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.contextTypes = {\r\n  router: PropTypes.object\r\n}\r\n"],"sourceRoot":""}