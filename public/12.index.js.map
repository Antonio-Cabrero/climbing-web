{"version":3,"sources":["webpack:///./app/components/sector-edit.js"],"names":["_react","__webpack_require__","l","f","a","_reactRouter","r","_reactBootstrap","_reactGoogleMaps","d","c","p","h","t","__esModule","default","GettingStartedGoogleMap","withGoogleMap","props","_react2","createElement","GoogleMap","defaultZoom","defaultCenter","defaultMapTypeId","google","maps","MapTypeId","TERRAIN","onClick","bind","onRightClick","markers","outline","SectorEdit","_auth2","isAdmin","this","setState","pushUrl","error","key","value","_this2","document","title","_config2","getTitle","match","params","sectorId","id","visibility","name","comment","lat","lng","polygonCoords","newMedia","_superagent2","get","getUrl","getRegion","withCredentials","end","err","res","body","e","target","event","_this3","preventDefault","isSaving","state","map","m","file","replace","photographer","inPhoto","req","post","field","JSON","stringify","areaId","location","query","idArea","set","forEach","attach","latLng","window","history","back","_reactFontawesome2","icon","spin","size","status","toString","Redirect","to","push","triangleCoords","split","i","parseFloat","length","Marker","position","Polygon","paths","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","onMapClick","onRightclick","onMapRightClick","visibilityText","getDefaultCenter","getDefaultZoom","Well","onSubmit","save","FormGroup","controlId","ControlLabel","FormControl","type","placeholder","onChange","onNameChanged","style","height","componentClass","onCommentChanged","DropdownButton","MenuItem","eventKey","onSelect","onVisibilityChanged","isSuperAdmin","_imageUpload2","onMediaChanged","onNewMediaChanged","containerElement","mapElement","url","scaledSize","Size","ButtonGroup","Button","bsStyle","resetMapPolygon","onCancel","disabled"],"mappings":"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","file":"12.index.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport Request from 'superagent';\r\nimport { FormGroup, ControlLabel, FormControl, ButtonGroup, DropdownButton, MenuItem, Button, Well } from 'react-bootstrap';\r\nimport {withGoogleMap, GoogleMap, Marker, Polygon} from \"react-google-maps\";\r\nimport ImageUpload from './common/image-upload/image-upload';\r\nimport config from '../utils/config.js';\r\nimport auth from '../utils/auth.js';\r\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/fontawesome-free-solid';\r\n\r\nconst GettingStartedGoogleMap = withGoogleMap(props => (\r\n  <GoogleMap\r\n    defaultZoom={props.defaultZoom}\r\n    defaultCenter={props.defaultCenter}\r\n    defaultMapTypeId={google.maps.MapTypeId.TERRAIN}\r\n    onClick={props.onClick.bind(this)}\r\n    onRightClick={props.onRightClick.bind(this)}>\r\n    {props.markers}\r\n    {props.outline}\r\n  </GoogleMap>\r\n));\r\n\r\nexport default class SectorEdit extends Component {\r\n  componentWillMount() {\r\n    if (!auth.isAdmin()) {\r\n      this.setState({pushUrl: \"/login\", error: null});\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title=config.getTitle() + \" | Sector edit\";\r\n    if (this.props.match.params.sectorId==-1) {\r\n      this.setState({\r\n        id: -1,\r\n        visibility: 0,\r\n        name: \"\",\r\n        comment: \"\",\r\n        lat: 0,\r\n        lng: 0,\r\n        polygonCoords: null,\r\n        newMedia: []\r\n      });\r\n    } else {\r\n      Request.get(config.getUrl(\"sectors?regionId=\" + config.getRegion() + \"&id=\" + this.props.match.params.sectorId)).withCredentials().end((err, res) => {\r\n        if (err) {\r\n          this.setState({error: err});\r\n        } else {\r\n          this.setState({\r\n            id: res.body.id,\r\n            visibility: res.body.visibility,\r\n            name: res.body.name,\r\n            comment: res.body.comment,\r\n            lat: res.body.lat,\r\n            lng: res.body.lng,\r\n            polygonCoords: res.body.polygonCoords,\r\n            newMedia: []\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onNameChanged(e) {\r\n    this.setState({name: e.target.value});\r\n  }\r\n\r\n  onVisibilityChanged(visibility, e) {\r\n    this.setState({visibility: visibility});\r\n  }\r\n\r\n  onCommentChanged(e) {\r\n    this.setState({comment: e.target.value});\r\n  }\r\n\r\n  onNewMediaChanged(newMedia) {\r\n    this.setState({newMedia: newMedia});\r\n  }\r\n\r\n  save(event) {\r\n    event.preventDefault();\r\n    this.setState({isSaving: true});\r\n    const newMedia = this.state.newMedia.map(m => {return {name: m.file.name.replace(/[^-a-z0-9.]/ig,'_'), photographer: m.photographer, inPhoto: m.inPhoto}});\r\n    var req = Request.post(config.getUrl(\"sectors?regionId=\" + config.getRegion()))\r\n    .withCredentials()\r\n    .field('json', JSON.stringify({areaId: this.props.location.query.idArea, id: this.state.id, visibility: this.state.visibility, name: this.state.name, comment: this.state.comment, lat: this.state.lat, lng: this.state.lng, polygonCoords: this.state.polygonCoords, newMedia: newMedia}))\r\n    .set('Accept', 'application/json');\r\n    this.state.newMedia.forEach(m => req.attach(m.file.name.replace(/[^-a-z0-9.]/ig,'_'), m.file));\r\n    req.end((err, res) => {\r\n      if (err) {\r\n        this.setState({error: err});\r\n      } else {\r\n        this.setState({pushUrl: \"/sector/\" + res.body.id});\r\n      }\r\n    });\r\n  }\r\n\r\n  onMapClick(event) {\r\n    this.setState({lat: event.latLng.lat(), lng: event.latLng.lng()});\r\n  }\r\n\r\n  onMapRightClick(event) {\r\n    if (this.state.polygonCoords) {\r\n      this.setState({\r\n        polygonCoords: this.state.polygonCoords + \";\" + event.latLng.lat() + \",\" + event.latLng.lng()\r\n      });\r\n    } else {\r\n      this.setState({polygonCoords: event.latLng.lat() + \",\" + event.latLng.lng()});\r\n    }\r\n  }\r\n\r\n  resetMapPolygon(event) {\r\n    this.setState({polygonCoords: null});\r\n  }\r\n\r\n  onCancel() {\r\n    window.history.back();\r\n  }\r\n\r\n  render() {\r\n    if (!this.state) {\r\n      return <center><FontAwesomeIcon icon=\"spinner\" spin size=\"3x\" /></center>;\r\n    }\r\n    else if (this.state.error) {\r\n      return <span><h3>{this.state.error.status}</h3>{this.state.error.toString()}</span>;\r\n    }\r\n    else if (this.state.pushUrl) {\r\n      return (<Redirect to={this.state.pushUrl} push />);\r\n    }\r\n    var triangleCoords = this.state.polygonCoords? this.state.polygonCoords.split(\";\").map((p, i) => {\r\n      const latLng = p.split(\",\");\r\n      return {lat: parseFloat(latLng[0]), lng: parseFloat(latLng[1])};\r\n    }) : [];\r\n    var outline = \"\";\r\n    if (triangleCoords.length==1) {\r\n      outline = <Marker position={{lat: triangleCoords[0].lat, lng: triangleCoords[0].lng}}/>;\r\n    } else if (triangleCoords.length>1) {\r\n      outline = <Polygon paths={triangleCoords} options={{strokeColor: '#FF3300', strokeOpacity: '0.5', strokeWeight: '2', fillColor: '#FF3300', fillOpacity: '0.15'}} onClick={this.onMapClick.bind(this)} onRightclick={this.onMapRightClick.bind(this)}/>;\r\n    }\r\n\r\n    var visibilityText = 'Visible for everyone';\r\n    if (this.state.visibility===1) {\r\n      visibilityText = 'Only visible for administrators';\r\n    } else if (this.state.visibility===2) {\r\n      visibilityText = 'Only visible for super administrators';\r\n    }\r\n    const defaultCenter = this.props.location.query.lat && parseFloat(this.props.location.query.lat)>0? {lat: parseFloat(this.props.location.query.lat), lng: parseFloat(this.props.location.query.lng)} : config.getDefaultCenter();\r\n    const defaultZoom = this.props.location.query.lat && parseFloat(this.props.location.query.lat)>0? 14 : config.getDefaultZoom();\r\n    return (\r\n      <Well>\r\n        <form onSubmit={this.save.bind(this)}>\r\n          <FormGroup controlId=\"formControlsName\">\r\n            <ControlLabel>Sector name</ControlLabel>\r\n            <FormControl type=\"text\" value={this.state.name} placeholder=\"Enter name\" onChange={this.onNameChanged.bind(this)} />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formControlsComment\">\r\n            <ControlLabel>Comment</ControlLabel>\r\n            <FormControl style={{height: '100px'}} componentClass=\"textarea\" placeholder=\"Enter comment\" value={this.state.comment} onChange={this.onCommentChanged.bind(this)} />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formControlsVisibility\">\r\n            <ControlLabel>Visibility</ControlLabel><br/>\r\n            <DropdownButton title={visibilityText} id=\"bg-nested-dropdown\">\r\n              <MenuItem eventKey=\"0\" onSelect={this.onVisibilityChanged.bind(this, 0)}>Visible for everyone</MenuItem>\r\n              <MenuItem eventKey=\"1\" onSelect={this.onVisibilityChanged.bind(this, 1)}>Only visible for administrators</MenuItem>\r\n              {auth.isSuperAdmin() && <MenuItem eventKey=\"2\" onSelect={this.onVisibilityChanged.bind(this, 2)}>Only visible for super administrators</MenuItem>}\r\n            </DropdownButton>\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formControlsMedia\">\r\n            <ImageUpload onMediaChanged={this.onNewMediaChanged.bind(this)} />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formControlsMap\">\r\n            <ControlLabel>Left mouse button to position parking coordinate, right mouse button to add polygon points (sector outline)</ControlLabel><br/>\r\n            <section style={{height: '600px'}}>\r\n              <GettingStartedGoogleMap\r\n                containerElement={<div style={{ height: `100%` }} />}\r\n                mapElement={<div style={{ height: `100%` }} />}\r\n                defaultZoom={defaultZoom}\r\n                defaultCenter={defaultCenter}\r\n                onClick={this.onMapClick.bind(this)}\r\n                onRightClick={this.onMapRightClick.bind(this)}\r\n                markers={this.state.lat!=0 && this.state.lng!=0? <Marker position={{lat: this.state.lat, lng: this.state.lng}} icon={{url: 'https://maps.google.com/mapfiles/kml/shapes/parking_lot_maps.png', scaledSize: new google.maps.Size(32, 32)}}/> : \"\"}\r\n                outline={outline}\r\n              />\r\n            </section>\r\n          </FormGroup>\r\n          <ButtonGroup>\r\n            <Button bsStyle=\"warning\" onClick={this.resetMapPolygon.bind(this)}>Clear polygon</Button>\r\n            <Button bsStyle=\"danger\" onClick={this.onCancel.bind(this)}>Cancel</Button>\r\n            <Button type=\"submit\" bsStyle=\"success\" disabled={this.state.isSaving}>{this.state.isSaving? 'Saving...' : 'Save sector'}</Button>\r\n          </ButtonGroup>\r\n        </form>\r\n      </Well>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}