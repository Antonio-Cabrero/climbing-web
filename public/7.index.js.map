{"version":3,"sources":["webpack:///./app/components/user-edit.js"],"names":["_react","__webpack_require__","s","f","r","_reactRouterDom","_reactRouter","u","_reactBootstrap","d","c","m","e","__esModule","default","UserEdit","props","t","TypeError","this","__proto__","Object","getPrototypeOf","call","_auth2","loggedIn","setState","pushUrl","key","value","_this2","_superagent2","get","_config2","getUrl","getRegion","match","params","userId","withCredentials","end","err","res","message","_react2","createElement","Panel","bsStyle","toString","id","body","username","firstname","lastname","currentPassword","newPassword","newPassword2","document","title","getTitle","event","_this3","preventDefault","validateFirstname","validateLastname","validateUsername","validateCurrentPassword","validateNewPassword","validateNewPassword2","post","send","regionId","state","set","window","history","back","target","length","test","Redirect","to","push","Breadcrumb","Link","color","Well","onSubmit","save","bind","FormGroup","controlId","validationState","ControlLabel","FormControl","type","placeholder","onChange","onFirstnameChanged","Feedback","onLastnameChanged","onUsernameChanged","HelpBlock","onCurrentPasswordChanged","onNewPasswordChanged","onConfirmNewPasswordChanged","ButtonGroup","Button","onClick","onCancel","_reactFontawesome2","icon","spin","size"],"mappings":"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","file":"7.index.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport Request from 'superagent';\r\nimport { FormGroup, ControlLabel, FormControl, HelpBlock, ButtonGroup, Button, Panel, Breadcrumb, Well } from 'react-bootstrap';\r\nimport auth from '../utils/auth.js';\r\nimport config from '../utils/config.js';\r\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/fontawesome-free-solid';\r\n\r\nexport default class UserEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (!auth.loggedIn()) {\r\n      this.setState({pushUrl: \"/login\"});\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    Request.get(config.getUrl(\"users/edit?regionId=\" + config.getRegion() + \"&id=\" + this.props.match.params.userId)).withCredentials().end((err, res) => {\r\n      if (err) {\r\n        this.setState({message: <Panel bsStyle='danger'>{err.toString()}</Panel>});\r\n      } else {\r\n        this.setState({\r\n          id: res.body.id,\r\n          username: res.body.username,\r\n          firstname: res.body.firstname,\r\n          lastname: res.body.lastname,\r\n          currentPassword: null,\r\n          newPassword: null,\r\n          newPassword2: null,\r\n          message: null\r\n        });\r\n        document.title=config.getTitle() + \" | Edit \" + res.body.firstname + \" \" + res.body.lastname;\r\n      }\r\n    });\r\n  }\r\n\r\n  save(event) {\r\n    event.preventDefault();\r\n    if (this.validateFirstname(null)==='error') {\r\n      this.setState({message: <Panel bsStyle='danger'>Invalid firstname.</Panel>});\r\n    } else if (this.validateLastname(null)==='error') {\r\n      this.setState({message: <Panel bsStyle='danger'>Invalid lastname.</Panel>});\r\n    } else if (this.validateUsername(null)==='error') {\r\n      this.setState({message: <Panel bsStyle='danger'>Invalid username.</Panel>});\r\n    } else if (this.validateCurrentPassword(null)==='error' || this.validateNewPassword(null)==='error' || this.validateNewPassword2(null)==='error') {\r\n      this.setState({message: <Panel bsStyle='danger'>Invalid password.</Panel>});\r\n    } else {\r\n      Request.post(config.getUrl(\"users/edit\"))\r\n      .withCredentials()\r\n      .send({regionId: config.getRegion(), id: this.state.id, username: this.state.username, firstname: this.state.firstname, lastname: this.state.lastname, currentPassword: this.state.currentPassword, newPassword: this.state.newPassword})\r\n      .set('Accept', 'application/json')\r\n      .end((err, res) => {\r\n        if (err) {\r\n          this.setState({message: <Panel bsStyle='danger'>{err.toString()}</Panel>});\r\n        } else {\r\n          this.setState({pushUrl: \"/user\"});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    window.history.back();\r\n  }\r\n\r\n  onFirstnameChanged(e) {\r\n    this.setState({firstname: e.target.value});\r\n  }\r\n\r\n  onLastnameChanged(e) {\r\n    this.setState({lastname: e.target.value});\r\n  }\r\n\r\n  onUsernameChanged(e) {\r\n    this.setState({username: e.target.value});\r\n  }\r\n\r\n  onCurrentPasswordChanged(e) {\r\n    this.setState({currentPassword: e.target.value});\r\n  }\r\n\r\n  onNewPasswordChanged(e) {\r\n    this.setState({newPassword: e.target.value});\r\n  }\r\n\r\n  onConfirmNewPasswordChanged(e) {\r\n    this.setState({newPassword2: e.target.value});\r\n  }\r\n\r\n  validateFirstname() {\r\n    if (this.state.firstname.length < 1) {\r\n      return 'error';\r\n    }\r\n    return 'success';\r\n  }\r\n\r\n  validateLastname() {\r\n    if (this.state.lastname.length < 1) {\r\n      return 'error';\r\n    }\r\n    return 'success';\r\n  }\r\n\r\n  validateUsername() {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!re.test(this.state.username)) {\r\n      return 'error';\r\n    }\r\n    return 'success';\r\n  }\r\n\r\n  validateCurrentPassword() {\r\n    return 'success';\r\n  }\r\n\r\n  validateNewPassword() {\r\n    if ((this.state.currentPassword || this.state.newPassword2) && !this.state.newPassword) return 'error';\r\n    else if (this.state.newPassword && this.state.newPassword.length < 8) return 'error';\r\n    return 'success';\r\n  }\r\n\r\n  validateNewPassword2() {\r\n    if ((this.state.currentPassword || this.state.newPassword) && !this.state.newPassword2) return 'error';\r\n    else if (this.state.newPassword2 && this.state.newPassword2.length < 8) return 'error';\r\n    else if (this.state.newPassword2 && this.state.newPassword!=this.state.newPassword2) return 'error';\r\n    return 'success';\r\n  }\r\n\r\n  render() {\r\n    if (!this.state) {\r\n      return <center><FontAwesomeIcon icon=\"spinner\" spin size=\"3x\" /></center>;\r\n    }\r\n    else if (this.state.pushUrl) {\r\n      return (<Redirect to={this.state.pushUrl} push />);\r\n    }\r\n    return (\r\n      <span>\r\n        <Breadcrumb>\r\n          <Link to={`/`}>Home</Link> / <font color='#777'>User edit</font>\r\n        </Breadcrumb>\r\n        <Well>\r\n          {this.state.message}\r\n          <form onSubmit={this.save.bind(this)}>\r\n            <FormGroup controlId=\"formControlsFirstname\" validationState={this.validateFirstname()}>\r\n              <ControlLabel>Firstname</ControlLabel>\r\n              <FormControl type=\"text\" value={this.state.firstname} placeholder=\"Enter firstname\" onChange={this.onFirstnameChanged.bind(this)} />\r\n              <FormControl.Feedback />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsLastname\" validationState={this.validateLastname()}>\r\n              <ControlLabel>Lastname</ControlLabel>\r\n              <FormControl type=\"text\" value={this.state.lastname} placeholder=\"Enter lastname\" onChange={this.onLastnameChanged.bind(this)} />\r\n              <FormControl.Feedback />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsUsername\" validationState={this.validateUsername()}>\r\n              <ControlLabel>Username</ControlLabel>\r\n              <FormControl type=\"email\" value={this.state.username} placeholder=\"Enter username\" onChange={this.onUsernameChanged.bind(this)} />\r\n              <FormControl.Feedback />\r\n              <HelpBlock>You must enter a valid email address.</HelpBlock>\r\n            </FormGroup>\r\n            <hr/>\r\n            <h4>Only fill following fields if you want to change your password</h4>\r\n            <FormGroup controlId=\"formControlsCurrentPassword\" validationState={this.validateCurrentPassword()}>\r\n              <ControlLabel>Current password</ControlLabel>\r\n              <FormControl type=\"password\" placeholder=\"Enter current password\" onChange={this.onCurrentPasswordChanged.bind(this)} />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsNewPassword\" validationState={this.validateNewPassword()}>\r\n              <ControlLabel>New password</ControlLabel>\r\n              <FormControl type=\"password\" placeholder=\"Enter new password\" onChange={this.onNewPasswordChanged.bind(this)} />\r\n              <FormControl.Feedback />\r\n              <HelpBlock>At least 8 characters.</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsNewPassword2\" validationState={this.validateNewPassword2()}>\r\n              <ControlLabel>Confirm new password</ControlLabel>\r\n              <FormControl type=\"password\" placeholder=\"Confirm new password\" onChange={this.onConfirmNewPasswordChanged.bind(this)} />\r\n              <FormControl.Feedback />\r\n              <HelpBlock>Must match new password.</HelpBlock>\r\n            </FormGroup>\r\n\r\n            <ButtonGroup>\r\n              <Button bsStyle=\"danger\" onClick={this.onCancel.bind(this)}>Cancel</Button>\r\n              <Button type=\"submit\" bsStyle=\"success\">Save</Button>\r\n            </ButtonGroup>\r\n          </form>\r\n        </Well>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}