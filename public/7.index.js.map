{"version":3,"sources":["webpack:///./node_modules/marker-clusterer-plus/src/markerclusterer.js","webpack:///./node_modules/react-google-maps/lib/components/addons/MarkerClusterer.js","webpack:///./node_modules/react-router-bootstrap/lib/LinkContainer.js","webpack:///./node_modules/react-router-bootstrap/lib/IndexLinkContainer.js","webpack:///./node_modules/react-router-bootstrap/lib/index.js"],"names":["ClusterIcon","cluster","styles","getMarkerClusterer","extend","google","maps","OverlayView","this","cluster_","className_","getClusterClass","styles_","center_","div_","sums_","visible_","setMap","getMap","Cluster","mc","markerClusterer_","map_","gridSize_","getGridSize","minClusterSize_","getMinimumClusterSize","averageCenter_","getAverageCenter","markers_","bounds_","clusterIcon_","getStyles","MarkerClusterer","map","opt_markers","opt_options","clusters_","listeners_","activeMap_","ready_","gridSize","minimumClusterSize","maxZoom_","maxZoom","title_","title","zoomOnClick_","zoomOnClick","averageCenter","ignoreHidden_","ignoreHidden","enableRetinaIcons_","enableRetinaIcons","imagePath_","imagePath","IMAGE_PATH","imageExtension_","imageExtension","IMAGE_EXTENSION","imageSizes_","imageSizes","IMAGE_SIZES","calculator_","calculator","CALCULATOR","batchSize_","batchSize","BATCH_SIZE","batchSizeIE_","batchSizeIE","BATCH_SIZE_IE","clusterClass_","clusterClass","navigator","userAgent","toLowerCase","indexOf","setupStyles_","addMarkers","prototype","onAdd","cMouseDownInCluster","cDraggingMapByCluster","cClusterIcon","document","createElement","className","show","getPanes","overlayMouseTarget","appendChild","boundsChangedListener_","event","addListener","addDomListener","e","theBounds","mz","trigger","getZoomOnClick","getMaxZoom","getBounds","fitBounds","setTimeout","getZoom","setZoom","cancelBubble","stopPropagation","onRemove","parentNode","hide","removeListener","clearInstanceListeners","removeChild","draw","pos","getPosFromLatLng_","style","top","y","left","x","display","img","bp","backgroundPosition_","split","spriteH","parseInt","replace","spriteV","cssText","createCss","url_","width_","height_","innerHTML","anchorText_","textColor_","textSize_","fontFamily_","fontWeight_","fontStyle_","textDecoration_","text","getTitle","useStyle","sums","index","Math","max","min","length","url","height","width","anchorText","anchorIcon_","anchorIcon","textColor","textSize","textDecoration","fontWeight","fontStyle","fontFamily","backgroundPosition","setCenter","center","push","join","latlng","getProjection","fromLatLngToDivPixel","getSize","getMarkers","getCenter","i","bounds","LatLngBounds","markers","getPosition","remove","addMarker","marker","mCount","isMarkerAlreadyAdded_","l","lat","lng","LatLng","calculateBounds_","isAdded","updateIcon_","isMarkerInClusterBounds","contains","getExtendedBounds","numStyles","getCalculator","cMarkerClusterer","repaint","resetViewport_","get","redraw_","size","fitMapToMarkers","setGridSize","setMinimumClusterSize","setMaxZoom","setStyles","setTitle","setZoomOnClick","setAverageCenter","getIgnoreHidden","setIgnoreHidden","getEnableRetinaIcons","setEnableRetinaIcons","getImageExtension","setImageExtension","getImagePath","setImagePath","getImageSizes","setImageSizes","setCalculator","getBatchSizeIE","setBatchSizeIE","setClusterClass","getTotalMarkers","getClusters","getTotalClusters","opt_nodraw","pushMarkerTo_","key","hasOwnProperty","getDraggable","removeMarker","removed","removeMarker_","removeMarkers","r","splice","clearMarkers","oldClusters","slice","projection","tr","getNorthEast","bl","getSouthWest","trPix","blPix","ne","fromDivPixelToLatLng","sw","createClusters_","opt_hide","distanceBetweenPoints_","p1","p2","dLat","PI","dLon","a","sin","cos","atan2","sqrt","isMarkerInBounds_","addToClosestCluster_","d","distance","clusterToAddTo","iFirst","mapBounds","timerRefStatic","clearTimeout","iLast","getVisible","obj1","obj2","object","property","apply","count","toString","dv","module","exports","Object","defineProperty","value","_MarkerClusterer$chil","_defineProperty3","_interopRequireDefault","__webpack_require__","_getPrototypeOf2","_classCallCheck3","_createClass3","_possibleConstructorReturn3","_inherits3","_react2","_propTypes2","_markerClustererPlus2","_MapChildHelper","_constants","obj","__esModule","default","_React$PureComponent","props","context","_this","__proto__","call","markerClusterer","construct","propTypes","updaterMap","MAP","state","MARKER_CLUSTERER","_ref","ANCHOR","componentDidMount","eventMap","prevProps","componentDidUpdate","componentWillUnmount","children","PureComponent","defaultAverageCenter","bool","defaultBatchSizeIE","number","defaultBatchSize","defaultCalculator","func","defaultClusterClass","string","defaultEnableRetinaIcons","defaultGridSize","defaultIgnoreHidden","defaultImageExtension","defaultImagePath","defaultImageSizes","array","defaultMaxZoom","defaultMinimumClusterSize","defaultStyles","defaultTitle","defaultZoomOnClick","onClick","onClusteringBegin","onClusteringEnd","onMouseOut","onMouseOver","contextTypes","childContextTypes","instance","_averageCenter","_batchSizeIE","_batchSize","setBatchSize","_calculator","_clusterClass","_enableRetinaIcons","_gridSize","_ignoreHidden","_imageExtension","_imagePath","_imageSizes","_maxZoom","_minimumClusterSize","_styles","_title","_zoomOnClick","_extends","assign","target","arguments","source","_typeof","Symbol","iterator","constructor","_react","_reactRouterDom","_possibleConstructorReturn","self","ReferenceError","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","LinkContainer","_Component","_temp","Constructor","TypeError","_len","args","Array","_key","concat","handleClick","_this$props","defaultPrevented","button","preventDefault","history","router","_this$props2","to","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","render","_this2","_props","exact","strict","activeClassName","activeStyle","getIsActive","isActive","keys","href","createHref","pathname","child","Children","only","Route","path","location","match","cloneElement","trim","Component","shape","isRequired","element","oneOfType","defaultProps","96","t","_LinkContainer2","IndexLinkContainer","_React$Component","97","_IndexLinkContainer3","_LinkContainer3"],"mappings":"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","file":"7.index.js","sourcesContent":["/**\n * @name MarkerClustererPlus for Google Maps V3\n * @version 2.1.2 [May 28, 2014]\n * @author Gary Little\n * @fileoverview\n * The library creates and manages per-zoom-level clusters for large amounts of markers.\n * <p>\n * This is an enhanced V3 implementation of the\n * <a href=\"http://gmaps-utility-library-dev.googlecode.com/svn/tags/markerclusterer/\"\n * >V2 MarkerClusterer</a> by Xiaoxi Wu. It is based on the\n * <a href=\"http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclusterer/\"\n * >V3 MarkerClusterer</a> port by Luke Mahe. MarkerClustererPlus was created by Gary Little.\n * <p>\n * v2.0 release: MarkerClustererPlus v2.0 is backward compatible with MarkerClusterer v1.0. It\n *  adds support for the <code>ignoreHidden</code>, <code>title</code>, <code>batchSizeIE</code>,\n *  and <code>calculator</code> properties as well as support for four more events. It also allows\n *  greater control over the styling of the text that appears on the cluster marker. The\n *  documentation has been significantly improved and the overall code has been simplified and\n *  polished. Very large numbers of markers can now be managed without causing Javascript timeout\n *  errors on Internet Explorer. Note that the name of the <code>clusterclick</code> event has been\n *  deprecated. The new name is <code>click</code>, so please change your application code now.\n */\n\n/**\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @name ClusterIconStyle\n * @class This class represents the object for values in the <code>styles</code> array passed\n *  to the {@link MarkerClusterer} constructor. The element in this array that is used to\n *  style the cluster icon is determined by calling the <code>calculator</code> function.\n *\n * @property {string} url The URL of the cluster icon image file. Required.\n * @property {number} height The display height (in pixels) of the cluster icon. Required.\n * @property {number} width The display width (in pixels) of the cluster icon. Required.\n * @property {Array} [anchorText] The position (in pixels) from the center of the cluster icon to\n *  where the text label is to be centered and drawn. The format is <code>[yoffset, xoffset]</code>\n *  where <code>yoffset</code> increases as you go down from center and <code>xoffset</code>\n *  increases to the right of center. The default is <code>[0, 0]</code>.\n * @property {Array} [anchorIcon] The anchor position (in pixels) of the cluster icon. This is the\n *  spot on the cluster icon that is to be aligned with the cluster position. The format is\n *  <code>[yoffset, xoffset]</code> where <code>yoffset</code> increases as you go down and\n *  <code>xoffset</code> increases to the right of the top-left corner of the icon. The default\n *  anchor position is the center of the cluster icon.\n * @property {string} [textColor=\"black\"] The color of the label text shown on the\n *  cluster icon.\n * @property {number} [textSize=11] The size (in pixels) of the label text shown on the\n *  cluster icon.\n * @property {string} [textDecoration=\"none\"] The value of the CSS <code>text-decoration</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontWeight=\"bold\"] The value of the CSS <code>font-weight</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontStyle=\"normal\"] The value of the CSS <code>font-style</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [fontFamily=\"Arial,sans-serif\"] The value of the CSS <code>font-family</code>\n *  property for the label text shown on the cluster icon.\n * @property {string} [backgroundPosition=\"0 0\"] The position of the cluster icon image\n *  within the image defined by <code>url</code>. The format is <code>\"xpos ypos\"</code>\n *  (the same format as for the CSS <code>background-position</code> property). You must set\n *  this property appropriately when the image defined by <code>url</code> represents a sprite\n *  containing multiple images. Note that the position <i>must</i> be specified in px units.\n */\n/**\n * @name ClusterIconInfo\n * @class This class is an object containing general information about a cluster icon. This is\n *  the object that a <code>calculator</code> function returns.\n *\n * @property {string} text The text of the label to be shown on the cluster icon.\n * @property {number} index The index plus 1 of the element in the <code>styles</code>\n *  array to be used to style the cluster icon.\n * @property {string} title The tooltip to display when the mouse moves over the cluster icon.\n *  If this value is <code>undefined</code> or <code>\"\"</code>, <code>title</code> is set to the\n *  value of the <code>title</code> property passed to the MarkerClusterer.\n */\n/**\n * A cluster icon.\n *\n * @constructor\n * @extends google.maps.OverlayView\n * @param {Cluster} cluster The cluster with which the icon is to be associated.\n * @param {Array} [styles] An array of {@link ClusterIconStyle} defining the cluster icons\n *  to use for various cluster sizes.\n * @private\n */\nfunction ClusterIcon(cluster, styles) {\n  cluster.getMarkerClusterer().extend(ClusterIcon, google.maps.OverlayView);\n\n  this.cluster_ = cluster;\n  this.className_ = cluster.getMarkerClusterer().getClusterClass();\n  this.styles_ = styles;\n  this.center_ = null;\n  this.div_ = null;\n  this.sums_ = null;\n  this.visible_ = false;\n\n  this.setMap(cluster.getMap()); // Note: this causes onAdd to be called\n}\n\n\n/**\n * Adds the icon to the DOM.\n */\nClusterIcon.prototype.onAdd = function () {\n  var cClusterIcon = this;\n  var cMouseDownInCluster;\n  var cDraggingMapByCluster;\n\n  this.div_ = document.createElement(\"div\");\n  this.div_.className = this.className_;\n  if (this.visible_) {\n    this.show();\n  }\n\n  this.getPanes().overlayMouseTarget.appendChild(this.div_);\n\n  // Fix for Issue 157\n  this.boundsChangedListener_ = google.maps.event.addListener(this.getMap(), \"bounds_changed\", function () {\n    cDraggingMapByCluster = cMouseDownInCluster;\n  });\n\n  google.maps.event.addDomListener(this.div_, \"mousedown\", function () {\n    cMouseDownInCluster = true;\n    cDraggingMapByCluster = false;\n  });\n\n  google.maps.event.addDomListener(this.div_, \"click\", function (e) {\n    cMouseDownInCluster = false;\n    if (!cDraggingMapByCluster) {\n      var theBounds;\n      var mz;\n      var mc = cClusterIcon.cluster_.getMarkerClusterer();\n      /**\n       * This event is fired when a cluster marker is clicked.\n       * @name MarkerClusterer#click\n       * @param {Cluster} c The cluster that was clicked.\n       * @event\n       */\n      google.maps.event.trigger(mc, \"click\", cClusterIcon.cluster_);\n      google.maps.event.trigger(mc, \"clusterclick\", cClusterIcon.cluster_); // deprecated name\n\n      // The default click handler follows. Disable it by setting\n      // the zoomOnClick property to false.\n      if (mc.getZoomOnClick()) {\n        // Zoom into the cluster.\n        mz = mc.getMaxZoom();\n        theBounds = cClusterIcon.cluster_.getBounds();\n        mc.getMap().fitBounds(theBounds);\n        // There is a fix for Issue 170 here:\n        setTimeout(function () {\n          mc.getMap().fitBounds(theBounds);\n          // Don't zoom beyond the max zoom level\n          if (mz !== null && (mc.getMap().getZoom() > mz)) {\n            mc.getMap().setZoom(mz + 1);\n          }\n        }, 100);\n      }\n\n      // Prevent event propagation to the map:\n      e.cancelBubble = true;\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      }\n    }\n  });\n\n  google.maps.event.addDomListener(this.div_, \"mouseover\", function () {\n    var mc = cClusterIcon.cluster_.getMarkerClusterer();\n    /**\n     * This event is fired when the mouse moves over a cluster marker.\n     * @name MarkerClusterer#mouseover\n     * @param {Cluster} c The cluster that the mouse moved over.\n     * @event\n     */\n    google.maps.event.trigger(mc, \"mouseover\", cClusterIcon.cluster_);\n  });\n\n  google.maps.event.addDomListener(this.div_, \"mouseout\", function () {\n    var mc = cClusterIcon.cluster_.getMarkerClusterer();\n    /**\n     * This event is fired when the mouse moves out of a cluster marker.\n     * @name MarkerClusterer#mouseout\n     * @param {Cluster} c The cluster that the mouse moved out of.\n     * @event\n     */\n    google.maps.event.trigger(mc, \"mouseout\", cClusterIcon.cluster_);\n  });\n};\n\n\n/**\n * Removes the icon from the DOM.\n */\nClusterIcon.prototype.onRemove = function () {\n  if (this.div_ && this.div_.parentNode) {\n    this.hide();\n    google.maps.event.removeListener(this.boundsChangedListener_);\n    google.maps.event.clearInstanceListeners(this.div_);\n    this.div_.parentNode.removeChild(this.div_);\n    this.div_ = null;\n  }\n};\n\n\n/**\n * Draws the icon.\n */\nClusterIcon.prototype.draw = function () {\n  if (this.visible_) {\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.top = pos.y + \"px\";\n    this.div_.style.left = pos.x + \"px\";\n  }\n};\n\n\n/**\n * Hides the icon.\n */\nClusterIcon.prototype.hide = function () {\n  if (this.div_) {\n    this.div_.style.display = \"none\";\n  }\n  this.visible_ = false;\n};\n\n\n/**\n * Positions and shows the icon.\n */\nClusterIcon.prototype.show = function () {\n  if (this.div_) {\n    var img = \"\";\n    // NOTE: values must be specified in px units\n    var bp = this.backgroundPosition_.split(\" \");\n    var spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, \"\"), 10);\n    var spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, \"\"), 10);\n    var pos = this.getPosFromLatLng_(this.center_);\n    this.div_.style.cssText = this.createCss(pos);\n    img = \"<img src='\" + this.url_ + \"' style='position: absolute; top: \" + spriteV + \"px; left: \" + spriteH + \"px; \";\n    if (!this.cluster_.getMarkerClusterer().enableRetinaIcons_) {\n      img += \"clip: rect(\" + (-1 * spriteV) + \"px, \" + ((-1 * spriteH) + this.width_) + \"px, \" +\n          ((-1 * spriteV) + this.height_) + \"px, \" + (-1 * spriteH) + \"px);\";\n    }\n    img += \"'>\";\n    this.div_.innerHTML = img + \"<div style='\" +\n        \"position: absolute;\" +\n        \"top: \" + this.anchorText_[0] + \"px;\" +\n        \"left: \" + this.anchorText_[1] + \"px;\" +\n        \"color: \" + this.textColor_ + \";\" +\n        \"font-size: \" + this.textSize_ + \"px;\" +\n        \"font-family: \" + this.fontFamily_ + \";\" +\n        \"font-weight: \" + this.fontWeight_ + \";\" +\n        \"font-style: \" + this.fontStyle_ + \";\" +\n        \"text-decoration: \" + this.textDecoration_ + \";\" +\n        \"text-align: center;\" +\n        \"width: \" + this.width_ + \"px;\" +\n        \"line-height:\" + this.height_ + \"px;\" +\n        \"'>\" + this.sums_.text + \"</div>\";\n    if (typeof this.sums_.title === \"undefined\" || this.sums_.title === \"\") {\n      this.div_.title = this.cluster_.getMarkerClusterer().getTitle();\n    } else {\n      this.div_.title = this.sums_.title;\n    }\n    this.div_.style.display = \"\";\n  }\n  this.visible_ = true;\n};\n\n\n/**\n * Sets the icon styles to the appropriate element in the styles array.\n *\n * @param {ClusterIconInfo} sums The icon label text and styles index.\n */\nClusterIcon.prototype.useStyle = function (sums) {\n  this.sums_ = sums;\n  var index = Math.max(0, sums.index - 1);\n  index = Math.min(this.styles_.length - 1, index);\n  var style = this.styles_[index];\n  this.url_ = style.url;\n  this.height_ = style.height;\n  this.width_ = style.width;\n  this.anchorText_ = style.anchorText || [0, 0];\n  this.anchorIcon_ = style.anchorIcon || [parseInt(this.height_ / 2, 10), parseInt(this.width_ / 2, 10)];\n  this.textColor_ = style.textColor || \"black\";\n  this.textSize_ = style.textSize || 11;\n  this.textDecoration_ = style.textDecoration || \"none\";\n  this.fontWeight_ = style.fontWeight || \"bold\";\n  this.fontStyle_ = style.fontStyle || \"normal\";\n  this.fontFamily_ = style.fontFamily || \"Arial,sans-serif\";\n  this.backgroundPosition_ = style.backgroundPosition || \"0 0\";\n};\n\n\n/**\n * Sets the position at which to center the icon.\n *\n * @param {google.maps.LatLng} center The latlng to set as the center.\n */\nClusterIcon.prototype.setCenter = function (center) {\n  this.center_ = center;\n};\n\n\n/**\n * Creates the cssText style parameter based on the position of the icon.\n *\n * @param {google.maps.Point} pos The position of the icon.\n * @return {string} The CSS style text.\n */\nClusterIcon.prototype.createCss = function (pos) {\n  var style = [];\n  style.push(\"cursor: pointer;\");\n  style.push(\"position: absolute; top: \" + pos.y + \"px; left: \" + pos.x + \"px;\");\n  style.push(\"width: \" + this.width_ + \"px; height: \" + this.height_ + \"px;\");\n  return style.join(\"\");\n};\n\n\n/**\n * Returns the position at which to place the DIV depending on the latlng.\n *\n * @param {google.maps.LatLng} latlng The position in latlng.\n * @return {google.maps.Point} The position in pixels.\n */\nClusterIcon.prototype.getPosFromLatLng_ = function (latlng) {\n  var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n  pos.x -= this.anchorIcon_[1];\n  pos.y -= this.anchorIcon_[0];\n  pos.x = parseInt(pos.x, 10);\n  pos.y = parseInt(pos.y, 10);\n  return pos;\n};\n\n\n/**\n * Creates a single cluster that manages a group of proximate markers.\n *  Used internally, do not call this constructor directly.\n * @constructor\n * @param {MarkerClusterer} mc The <code>MarkerClusterer</code> object with which this\n *  cluster is associated.\n */\nfunction Cluster(mc) {\n  this.markerClusterer_ = mc;\n  this.map_ = mc.getMap();\n  this.gridSize_ = mc.getGridSize();\n  this.minClusterSize_ = mc.getMinimumClusterSize();\n  this.averageCenter_ = mc.getAverageCenter();\n  this.markers_ = [];\n  this.center_ = null;\n  this.bounds_ = null;\n  this.clusterIcon_ = new ClusterIcon(this, mc.getStyles());\n}\n\n\n/**\n * Returns the number of markers managed by the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {number} The number of markers in the cluster.\n */\nCluster.prototype.getSize = function () {\n  return this.markers_.length;\n};\n\n\n/**\n * Returns the array of markers managed by the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {Array} The array of markers in the cluster.\n */\nCluster.prototype.getMarkers = function () {\n  return this.markers_;\n};\n\n\n/**\n * Returns the center of the cluster. You can call this from\n * a <code>click</code>, <code>mouseover</code>, or <code>mouseout</code> event handler\n * for the <code>MarkerClusterer</code> object.\n *\n * @return {google.maps.LatLng} The center of the cluster.\n */\nCluster.prototype.getCenter = function () {\n  return this.center_;\n};\n\n\n/**\n * Returns the map with which the cluster is associated.\n *\n * @return {google.maps.Map} The map.\n * @ignore\n */\nCluster.prototype.getMap = function () {\n  return this.map_;\n};\n\n\n/**\n * Returns the <code>MarkerClusterer</code> object with which the cluster is associated.\n *\n * @return {MarkerClusterer} The associated marker clusterer.\n * @ignore\n */\nCluster.prototype.getMarkerClusterer = function () {\n  return this.markerClusterer_;\n};\n\n\n/**\n * Returns the bounds of the cluster.\n *\n * @return {google.maps.LatLngBounds} the cluster bounds.\n * @ignore\n */\nCluster.prototype.getBounds = function () {\n  var i;\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  var markers = this.getMarkers();\n  for (i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i].getPosition());\n  }\n  return bounds;\n};\n\n\n/**\n * Removes the cluster from the map.\n *\n * @ignore\n */\nCluster.prototype.remove = function () {\n  this.clusterIcon_.setMap(null);\n  this.markers_ = [];\n  delete this.markers_;\n};\n\n\n/**\n * Adds a marker to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to be added.\n * @return {boolean} True if the marker was added.\n * @ignore\n */\nCluster.prototype.addMarker = function (marker) {\n  var i;\n  var mCount;\n  var mz;\n\n  if (this.isMarkerAlreadyAdded_(marker)) {\n    return false;\n  }\n\n  if (!this.center_) {\n    this.center_ = marker.getPosition();\n    this.calculateBounds_();\n  } else {\n    if (this.averageCenter_) {\n      var l = this.markers_.length + 1;\n      var lat = (this.center_.lat() * (l - 1) + marker.getPosition().lat()) / l;\n      var lng = (this.center_.lng() * (l - 1) + marker.getPosition().lng()) / l;\n      this.center_ = new google.maps.LatLng(lat, lng);\n      this.calculateBounds_();\n    }\n  }\n\n  marker.isAdded = true;\n  this.markers_.push(marker);\n\n  mCount = this.markers_.length;\n  mz = this.markerClusterer_.getMaxZoom();\n  if (mz !== null && this.map_.getZoom() > mz) {\n    // Zoomed in past max zoom, so show the marker.\n    if (marker.getMap() !== this.map_) {\n      marker.setMap(this.map_);\n    }\n  } else if (mCount < this.minClusterSize_) {\n    // Min cluster size not reached so show the marker.\n    if (marker.getMap() !== this.map_) {\n      marker.setMap(this.map_);\n    }\n  } else if (mCount === this.minClusterSize_) {\n    // Hide the markers that were showing.\n    for (i = 0; i < mCount; i++) {\n      this.markers_[i].setMap(null);\n    }\n  } else {\n    marker.setMap(null);\n  }\n\n  this.updateIcon_();\n  return true;\n};\n\n\n/**\n * Determines if a marker lies within the cluster's bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker lies in the bounds.\n * @ignore\n */\nCluster.prototype.isMarkerInClusterBounds = function (marker) {\n  return this.bounds_.contains(marker.getPosition());\n};\n\n\n/**\n * Calculates the extended bounds of the cluster with the grid.\n */\nCluster.prototype.calculateBounds_ = function () {\n  var bounds = new google.maps.LatLngBounds(this.center_, this.center_);\n  this.bounds_ = this.markerClusterer_.getExtendedBounds(bounds);\n};\n\n\n/**\n * Updates the cluster icon.\n */\nCluster.prototype.updateIcon_ = function () {\n  var mCount = this.markers_.length;\n  var mz = this.markerClusterer_.getMaxZoom();\n\n  if (mz !== null && this.map_.getZoom() > mz) {\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  if (mCount < this.minClusterSize_) {\n    // Min cluster size not yet reached.\n    this.clusterIcon_.hide();\n    return;\n  }\n\n  var numStyles = this.markerClusterer_.getStyles().length;\n  var sums = this.markerClusterer_.getCalculator()(this.markers_, numStyles);\n  this.clusterIcon_.setCenter(this.center_);\n  this.clusterIcon_.useStyle(sums);\n  this.clusterIcon_.show();\n};\n\n\n/**\n * Determines if a marker has already been added to the cluster.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @return {boolean} True if the marker has already been added.\n */\nCluster.prototype.isMarkerAlreadyAdded_ = function (marker) {\n  var i;\n  if (this.markers_.indexOf) {\n    return this.markers_.indexOf(marker) !== -1;\n  } else {\n    for (i = 0; i < this.markers_.length; i++) {\n      if (marker === this.markers_[i]) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @name MarkerClustererOptions\n * @class This class represents the optional parameter passed to\n *  the {@link MarkerClusterer} constructor.\n * @property {number} [gridSize=60] The grid size of a cluster in pixels. The grid is a square.\n * @property {number} [maxZoom=null] The maximum zoom level at which clustering is enabled or\n *  <code>null</code> if clustering is to be enabled at all zoom levels.\n * @property {boolean} [zoomOnClick=true] Whether to zoom the map when a cluster marker is\n *  clicked. You may want to set this to <code>false</code> if you have installed a handler\n *  for the <code>click</code> event and it deals with zooming on its own.\n * @property {boolean} [averageCenter=false] Whether the position of a cluster marker should be\n *  the average position of all markers in the cluster. If set to <code>false</code>, the\n *  cluster marker is positioned at the location of the first marker added to the cluster.\n * @property {number} [minimumClusterSize=2] The minimum number of markers needed in a cluster\n *  before the markers are hidden and a cluster marker appears.\n * @property {boolean} [ignoreHidden=false] Whether to ignore hidden markers in clusters. You\n *  may want to set this to <code>true</code> to ensure that hidden markers are not included\n *  in the marker count that appears on a cluster marker (this count is the value of the\n *  <code>text</code> property of the result returned by the default <code>calculator</code>).\n *  If set to <code>true</code> and you change the visibility of a marker being clustered, be\n *  sure to also call <code>MarkerClusterer.repaint()</code>.\n * @property {string} [title=\"\"] The tooltip to display when the mouse moves over a cluster\n *  marker. (Alternatively, you can use a custom <code>calculator</code> function to specify a\n *  different tooltip for each cluster marker.)\n * @property {function} [calculator=MarkerClusterer.CALCULATOR] The function used to determine\n *  the text to be displayed on a cluster marker and the index indicating which style to use\n *  for the cluster marker. The input parameters for the function are (1) the array of markers\n *  represented by a cluster marker and (2) the number of cluster icon styles. It returns a\n *  {@link ClusterIconInfo} object. The default <code>calculator</code> returns a\n *  <code>text</code> property which is the number of markers in the cluster and an\n *  <code>index</code> property which is one higher than the lowest integer such that\n *  <code>10^i</code> exceeds the number of markers in the cluster, or the size of the styles\n *  array, whichever is less. The <code>styles</code> array element used has an index of\n *  <code>index</code> minus 1. For example, the default <code>calculator</code> returns a\n *  <code>text</code> value of <code>\"125\"</code> and an <code>index</code> of <code>3</code>\n *  for a cluster icon representing 125 markers so the element used in the <code>styles</code>\n *  array is <code>2</code>. A <code>calculator</code> may also return a <code>title</code>\n *  property that contains the text of the tooltip to be used for the cluster marker. If\n *   <code>title</code> is not defined, the tooltip is set to the value of the <code>title</code>\n *   property for the MarkerClusterer.\n * @property {string} [clusterClass=\"cluster\"] The name of the CSS class defining general styles\n *  for the cluster markers. Use this class to define CSS styles that are not set up by the code\n *  that processes the <code>styles</code> array.\n * @property {Array} [styles] An array of {@link ClusterIconStyle} elements defining the styles\n *  of the cluster markers to be used. The element to be used to style a given cluster marker\n *  is determined by the function defined by the <code>calculator</code> property.\n *  The default is an array of {@link ClusterIconStyle} elements whose properties are derived\n *  from the values for <code>imagePath</code>, <code>imageExtension</code>, and\n *  <code>imageSizes</code>.\n * @property {boolean} [enableRetinaIcons=false] Whether to allow the use of cluster icons that\n * have sizes that are some multiple (typically double) of their actual display size. Icons such\n * as these look better when viewed on high-resolution monitors such as Apple's Retina displays.\n * Note: if this property is <code>true</code>, sprites cannot be used as cluster icons.\n * @property {number} [batchSize=MarkerClusterer.BATCH_SIZE] Set this property to the\n *  number of markers to be processed in a single batch when using a browser other than\n *  Internet Explorer (for Internet Explorer, use the batchSizeIE property instead).\n * @property {number} [batchSizeIE=MarkerClusterer.BATCH_SIZE_IE] When Internet Explorer is\n *  being used, markers are processed in several batches with a small delay inserted between\n *  each batch in an attempt to avoid Javascript timeout errors. Set this property to the\n *  number of markers to be processed in a single batch; select as high a number as you can\n *  without causing a timeout error in the browser. This number might need to be as low as 100\n *  if 15,000 markers are being managed, for example.\n * @property {string} [imagePath=MarkerClusterer.IMAGE_PATH]\n *  The full URL of the root name of the group of image files to use for cluster icons.\n *  The complete file name is of the form <code>imagePath</code>n.<code>imageExtension</code>\n *  where n is the image file number (1, 2, etc.).\n * @property {string} [imageExtension=MarkerClusterer.IMAGE_EXTENSION]\n *  The extension name for the cluster icon image files (e.g., <code>\"png\"</code> or\n *  <code>\"jpg\"</code>).\n * @property {Array} [imageSizes=MarkerClusterer.IMAGE_SIZES]\n *  An array of numbers containing the widths of the group of\n *  <code>imagePath</code>n.<code>imageExtension</code> image files.\n *  (The images are assumed to be square.)\n */\n/**\n * Creates a MarkerClusterer object with the options specified in {@link MarkerClustererOptions}.\n * @constructor\n * @extends google.maps.OverlayView\n * @param {google.maps.Map} map The Google map to attach to.\n * @param {Array.<google.maps.Marker>} [opt_markers] The markers to be added to the cluster.\n * @param {MarkerClustererOptions} [opt_options] The optional parameters.\n */\nfunction MarkerClusterer(map, opt_markers, opt_options) {\n  // MarkerClusterer implements google.maps.OverlayView interface. We use the\n  // extend function to extend MarkerClusterer with google.maps.OverlayView\n  // because it might not always be available when the code is defined so we\n  // look for it at the last possible moment. If it doesn't exist now then\n  // there is no point going ahead :)\n  this.extend(MarkerClusterer, google.maps.OverlayView);\n\n  opt_markers = opt_markers || [];\n  opt_options = opt_options || {};\n\n  this.markers_ = [];\n  this.clusters_ = [];\n  this.listeners_ = [];\n  this.activeMap_ = null;\n  this.ready_ = false;\n\n  this.gridSize_ = opt_options.gridSize || 60;\n  this.minClusterSize_ = opt_options.minimumClusterSize || 2;\n  this.maxZoom_ = opt_options.maxZoom || null;\n  this.styles_ = opt_options.styles || [];\n  this.title_ = opt_options.title || \"\";\n  this.zoomOnClick_ = true;\n  if (opt_options.zoomOnClick !== undefined) {\n    this.zoomOnClick_ = opt_options.zoomOnClick;\n  }\n  this.averageCenter_ = false;\n  if (opt_options.averageCenter !== undefined) {\n    this.averageCenter_ = opt_options.averageCenter;\n  }\n  this.ignoreHidden_ = false;\n  if (opt_options.ignoreHidden !== undefined) {\n    this.ignoreHidden_ = opt_options.ignoreHidden;\n  }\n  this.enableRetinaIcons_ = false;\n  if (opt_options.enableRetinaIcons !== undefined) {\n    this.enableRetinaIcons_ = opt_options.enableRetinaIcons;\n  }\n  this.imagePath_ = opt_options.imagePath || MarkerClusterer.IMAGE_PATH;\n  this.imageExtension_ = opt_options.imageExtension || MarkerClusterer.IMAGE_EXTENSION;\n  this.imageSizes_ = opt_options.imageSizes || MarkerClusterer.IMAGE_SIZES;\n  this.calculator_ = opt_options.calculator || MarkerClusterer.CALCULATOR;\n  this.batchSize_ = opt_options.batchSize || MarkerClusterer.BATCH_SIZE;\n  this.batchSizeIE_ = opt_options.batchSizeIE || MarkerClusterer.BATCH_SIZE_IE;\n  this.clusterClass_ = opt_options.clusterClass || \"cluster\";\n\n  if (navigator.userAgent.toLowerCase().indexOf(\"msie\") !== -1) {\n    // Try to avoid IE timeout when processing a huge number of markers:\n    this.batchSize_ = this.batchSizeIE_;\n  }\n\n  this.setupStyles_();\n\n  this.addMarkers(opt_markers, true);\n  this.setMap(map); // Note: this causes onAdd to be called\n}\n\n\n/**\n * Implementation of the onAdd interface method.\n * @ignore\n */\nMarkerClusterer.prototype.onAdd = function () {\n  var cMarkerClusterer = this;\n\n  this.activeMap_ = this.getMap();\n  this.ready_ = true;\n\n  this.repaint();\n\n  // Add the map event listeners\n  this.listeners_ = [\n    google.maps.event.addListener(this.getMap(), \"zoom_changed\", function () {\n      cMarkerClusterer.resetViewport_(false);\n      // Workaround for this Google bug: when map is at level 0 and \"-\" of\n      // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n      // the map doesn't zoom out any further. In this situation, no \"idle\"\n      // event is triggered so the cluster markers that have been removed\n      // do not get redrawn. Same goes for a zoom in at maxZoom.\n      if (this.getZoom() === (this.get(\"minZoom\") || 0) || this.getZoom() === this.get(\"maxZoom\")) {\n        google.maps.event.trigger(this, \"idle\");\n      }\n    }),\n    google.maps.event.addListener(this.getMap(), \"idle\", function () {\n      cMarkerClusterer.redraw_();\n    })\n  ];\n};\n\n\n/**\n * Implementation of the onRemove interface method.\n * Removes map event listeners and all cluster icons from the DOM.\n * All managed markers are also put back on the map.\n * @ignore\n */\nMarkerClusterer.prototype.onRemove = function () {\n  var i;\n\n  // Put all the managed markers back on the map:\n  for (i = 0; i < this.markers_.length; i++) {\n    if (this.markers_[i].getMap() !== this.activeMap_) {\n      this.markers_[i].setMap(this.activeMap_);\n    }\n  }\n\n  // Remove all clusters:\n  for (i = 0; i < this.clusters_.length; i++) {\n    this.clusters_[i].remove();\n  }\n  this.clusters_ = [];\n\n  // Remove map event listeners:\n  for (i = 0; i < this.listeners_.length; i++) {\n    google.maps.event.removeListener(this.listeners_[i]);\n  }\n  this.listeners_ = [];\n\n  this.activeMap_ = null;\n  this.ready_ = false;\n};\n\n\n/**\n * Implementation of the draw interface method.\n * @ignore\n */\nMarkerClusterer.prototype.draw = function () {};\n\n\n/**\n * Sets up the styles object.\n */\nMarkerClusterer.prototype.setupStyles_ = function () {\n  var i, size;\n  if (this.styles_.length > 0) {\n    return;\n  }\n\n  for (i = 0; i < this.imageSizes_.length; i++) {\n    size = this.imageSizes_[i];\n    this.styles_.push({\n      url: this.imagePath_ + (i + 1) + \".\" + this.imageExtension_,\n      height: size,\n      width: size\n    });\n  }\n};\n\n\n/**\n *  Fits the map to the bounds of the markers managed by the clusterer.\n */\nMarkerClusterer.prototype.fitMapToMarkers = function () {\n  var i;\n  var markers = this.getMarkers();\n  var bounds = new google.maps.LatLngBounds();\n  for (i = 0; i < markers.length; i++) {\n    bounds.extend(markers[i].getPosition());\n  }\n\n  this.getMap().fitBounds(bounds);\n};\n\n\n/**\n * Returns the value of the <code>gridSize</code> property.\n *\n * @return {number} The grid size.\n */\nMarkerClusterer.prototype.getGridSize = function () {\n  return this.gridSize_;\n};\n\n\n/**\n * Sets the value of the <code>gridSize</code> property.\n *\n * @param {number} gridSize The grid size.\n */\nMarkerClusterer.prototype.setGridSize = function (gridSize) {\n  this.gridSize_ = gridSize;\n};\n\n\n/**\n * Returns the value of the <code>minimumClusterSize</code> property.\n *\n * @return {number} The minimum cluster size.\n */\nMarkerClusterer.prototype.getMinimumClusterSize = function () {\n  return this.minClusterSize_;\n};\n\n/**\n * Sets the value of the <code>minimumClusterSize</code> property.\n *\n * @param {number} minimumClusterSize The minimum cluster size.\n */\nMarkerClusterer.prototype.setMinimumClusterSize = function (minimumClusterSize) {\n  this.minClusterSize_ = minimumClusterSize;\n};\n\n\n/**\n *  Returns the value of the <code>maxZoom</code> property.\n *\n *  @return {number} The maximum zoom level.\n */\nMarkerClusterer.prototype.getMaxZoom = function () {\n  return this.maxZoom_;\n};\n\n\n/**\n *  Sets the value of the <code>maxZoom</code> property.\n *\n *  @param {number} maxZoom The maximum zoom level.\n */\nMarkerClusterer.prototype.setMaxZoom = function (maxZoom) {\n  this.maxZoom_ = maxZoom;\n};\n\n\n/**\n *  Returns the value of the <code>styles</code> property.\n *\n *  @return {Array} The array of styles defining the cluster markers to be used.\n */\nMarkerClusterer.prototype.getStyles = function () {\n  return this.styles_;\n};\n\n\n/**\n *  Sets the value of the <code>styles</code> property.\n *\n *  @param {Array.<ClusterIconStyle>} styles The array of styles to use.\n */\nMarkerClusterer.prototype.setStyles = function (styles) {\n  this.styles_ = styles;\n};\n\n\n/**\n * Returns the value of the <code>title</code> property.\n *\n * @return {string} The content of the title text.\n */\nMarkerClusterer.prototype.getTitle = function () {\n  return this.title_;\n};\n\n\n/**\n *  Sets the value of the <code>title</code> property.\n *\n *  @param {string} title The value of the title property.\n */\nMarkerClusterer.prototype.setTitle = function (title) {\n  this.title_ = title;\n};\n\n\n/**\n * Returns the value of the <code>zoomOnClick</code> property.\n *\n * @return {boolean} True if zoomOnClick property is set.\n */\nMarkerClusterer.prototype.getZoomOnClick = function () {\n  return this.zoomOnClick_;\n};\n\n\n/**\n *  Sets the value of the <code>zoomOnClick</code> property.\n *\n *  @param {boolean} zoomOnClick The value of the zoomOnClick property.\n */\nMarkerClusterer.prototype.setZoomOnClick = function (zoomOnClick) {\n  this.zoomOnClick_ = zoomOnClick;\n};\n\n\n/**\n * Returns the value of the <code>averageCenter</code> property.\n *\n * @return {boolean} True if averageCenter property is set.\n */\nMarkerClusterer.prototype.getAverageCenter = function () {\n  return this.averageCenter_;\n};\n\n\n/**\n *  Sets the value of the <code>averageCenter</code> property.\n *\n *  @param {boolean} averageCenter The value of the averageCenter property.\n */\nMarkerClusterer.prototype.setAverageCenter = function (averageCenter) {\n  this.averageCenter_ = averageCenter;\n};\n\n\n/**\n * Returns the value of the <code>ignoreHidden</code> property.\n *\n * @return {boolean} True if ignoreHidden property is set.\n */\nMarkerClusterer.prototype.getIgnoreHidden = function () {\n  return this.ignoreHidden_;\n};\n\n\n/**\n *  Sets the value of the <code>ignoreHidden</code> property.\n *\n *  @param {boolean} ignoreHidden The value of the ignoreHidden property.\n */\nMarkerClusterer.prototype.setIgnoreHidden = function (ignoreHidden) {\n  this.ignoreHidden_ = ignoreHidden;\n};\n\n\n/**\n * Returns the value of the <code>enableRetinaIcons</code> property.\n *\n * @return {boolean} True if enableRetinaIcons property is set.\n */\nMarkerClusterer.prototype.getEnableRetinaIcons = function () {\n  return this.enableRetinaIcons_;\n};\n\n\n/**\n *  Sets the value of the <code>enableRetinaIcons</code> property.\n *\n *  @param {boolean} enableRetinaIcons The value of the enableRetinaIcons property.\n */\nMarkerClusterer.prototype.setEnableRetinaIcons = function (enableRetinaIcons) {\n  this.enableRetinaIcons_ = enableRetinaIcons;\n};\n\n\n/**\n * Returns the value of the <code>imageExtension</code> property.\n *\n * @return {string} The value of the imageExtension property.\n */\nMarkerClusterer.prototype.getImageExtension = function () {\n  return this.imageExtension_;\n};\n\n\n/**\n *  Sets the value of the <code>imageExtension</code> property.\n *\n *  @param {string} imageExtension The value of the imageExtension property.\n */\nMarkerClusterer.prototype.setImageExtension = function (imageExtension) {\n  this.imageExtension_ = imageExtension;\n};\n\n\n/**\n * Returns the value of the <code>imagePath</code> property.\n *\n * @return {string} The value of the imagePath property.\n */\nMarkerClusterer.prototype.getImagePath = function () {\n  return this.imagePath_;\n};\n\n\n/**\n *  Sets the value of the <code>imagePath</code> property.\n *\n *  @param {string} imagePath The value of the imagePath property.\n */\nMarkerClusterer.prototype.setImagePath = function (imagePath) {\n  this.imagePath_ = imagePath;\n};\n\n\n/**\n * Returns the value of the <code>imageSizes</code> property.\n *\n * @return {Array} The value of the imageSizes property.\n */\nMarkerClusterer.prototype.getImageSizes = function () {\n  return this.imageSizes_;\n};\n\n\n/**\n *  Sets the value of the <code>imageSizes</code> property.\n *\n *  @param {Array} imageSizes The value of the imageSizes property.\n */\nMarkerClusterer.prototype.setImageSizes = function (imageSizes) {\n  this.imageSizes_ = imageSizes;\n};\n\n\n/**\n * Returns the value of the <code>calculator</code> property.\n *\n * @return {function} the value of the calculator property.\n */\nMarkerClusterer.prototype.getCalculator = function () {\n  return this.calculator_;\n};\n\n\n/**\n * Sets the value of the <code>calculator</code> property.\n *\n * @param {function(Array.<google.maps.Marker>, number)} calculator The value\n *  of the calculator property.\n */\nMarkerClusterer.prototype.setCalculator = function (calculator) {\n  this.calculator_ = calculator;\n};\n\n\n/**\n * Returns the value of the <code>batchSizeIE</code> property.\n *\n * @return {number} the value of the batchSizeIE property.\n */\nMarkerClusterer.prototype.getBatchSizeIE = function () {\n  return this.batchSizeIE_;\n};\n\n\n/**\n * Sets the value of the <code>batchSizeIE</code> property.\n *\n *  @param {number} batchSizeIE The value of the batchSizeIE property.\n */\nMarkerClusterer.prototype.setBatchSizeIE = function (batchSizeIE) {\n  this.batchSizeIE_ = batchSizeIE;\n};\n\n\n/**\n * Returns the value of the <code>clusterClass</code> property.\n *\n * @return {string} the value of the clusterClass property.\n */\nMarkerClusterer.prototype.getClusterClass = function () {\n  return this.clusterClass_;\n};\n\n\n/**\n * Sets the value of the <code>clusterClass</code> property.\n *\n *  @param {string} clusterClass The value of the clusterClass property.\n */\nMarkerClusterer.prototype.setClusterClass = function (clusterClass) {\n  this.clusterClass_ = clusterClass;\n};\n\n\n/**\n *  Returns the array of markers managed by the clusterer.\n *\n *  @return {Array} The array of markers managed by the clusterer.\n */\nMarkerClusterer.prototype.getMarkers = function () {\n  return this.markers_;\n};\n\n\n/**\n *  Returns the number of markers managed by the clusterer.\n *\n *  @return {number} The number of markers.\n */\nMarkerClusterer.prototype.getTotalMarkers = function () {\n  return this.markers_.length;\n};\n\n\n/**\n * Returns the current array of clusters formed by the clusterer.\n *\n * @return {Array} The array of clusters formed by the clusterer.\n */\nMarkerClusterer.prototype.getClusters = function () {\n  return this.clusters_;\n};\n\n\n/**\n * Returns the number of clusters formed by the clusterer.\n *\n * @return {number} The number of clusters formed by the clusterer.\n */\nMarkerClusterer.prototype.getTotalClusters = function () {\n  return this.clusters_.length;\n};\n\n\n/**\n * Adds a marker to the clusterer. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>.\n *\n * @param {google.maps.Marker} marker The marker to add.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n */\nMarkerClusterer.prototype.addMarker = function (marker, opt_nodraw) {\n  this.pushMarkerTo_(marker);\n  if (!opt_nodraw) {\n    this.redraw_();\n  }\n};\n\n\n/**\n * Adds an array of markers to the clusterer. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to add.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n */\nMarkerClusterer.prototype.addMarkers = function (markers, opt_nodraw) {\n  var key;\n  for (key in markers) {\n    if (markers.hasOwnProperty(key)) {\n      this.pushMarkerTo_(markers[key]);\n    }\n  }  \n  if (!opt_nodraw) {\n    this.redraw_();\n  }\n};\n\n\n/**\n * Pushes a marker to the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to add.\n */\nMarkerClusterer.prototype.pushMarkerTo_ = function (marker) {\n  // If the marker is draggable add a listener so we can update the clusters on the dragend:\n  if (marker.getDraggable()) {\n    var cMarkerClusterer = this;\n    google.maps.event.addListener(marker, \"dragend\", function () {\n      if (cMarkerClusterer.ready_) {\n        this.isAdded = false;\n        cMarkerClusterer.repaint();\n      }\n    });\n  }\n  marker.isAdded = false;\n  this.markers_.push(marker);\n};\n\n\n/**\n * Removes a marker from the cluster.  The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>. Returns <code>true</code> if the\n *  marker was removed from the clusterer.\n *\n * @param {google.maps.Marker} marker The marker to remove.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n * @return {boolean} True if the marker was removed from the clusterer.\n */\nMarkerClusterer.prototype.removeMarker = function (marker, opt_nodraw) {\n  var removed = this.removeMarker_(marker);\n\n  if (!opt_nodraw && removed) {\n    this.repaint();\n  }\n\n  return removed;\n};\n\n\n/**\n * Removes an array of markers from the cluster. The clusters are redrawn unless\n *  <code>opt_nodraw</code> is set to <code>true</code>. Returns <code>true</code> if markers\n *  were removed from the clusterer.\n *\n * @param {Array.<google.maps.Marker>} markers The markers to remove.\n * @param {boolean} [opt_nodraw] Set to <code>true</code> to prevent redrawing.\n * @return {boolean} True if markers were removed from the clusterer.\n */\nMarkerClusterer.prototype.removeMarkers = function (markers, opt_nodraw) {\n  var i, r;\n  var removed = false;\n\n  for (i = 0; i < markers.length; i++) {\n    r = this.removeMarker_(markers[i]);\n    removed = removed || r;\n  }\n\n  if (!opt_nodraw && removed) {\n    this.repaint();\n  }\n\n  return removed;\n};\n\n\n/**\n * Removes a marker and returns true if removed, false if not.\n *\n * @param {google.maps.Marker} marker The marker to remove\n * @return {boolean} Whether the marker was removed or not\n */\nMarkerClusterer.prototype.removeMarker_ = function (marker) {\n  var i;\n  var index = -1;\n  if (this.markers_.indexOf) {\n    index = this.markers_.indexOf(marker);\n  } else {\n    for (i = 0; i < this.markers_.length; i++) {\n      if (marker === this.markers_[i]) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  if (index === -1) {\n    // Marker is not in our list of markers, so do nothing:\n    return false;\n  }\n\n  marker.setMap(null);\n  this.markers_.splice(index, 1); // Remove the marker from the list of managed markers\n  return true;\n};\n\n\n/**\n * Removes all clusters and markers from the map and also removes all markers\n *  managed by the clusterer.\n */\nMarkerClusterer.prototype.clearMarkers = function () {\n  this.resetViewport_(true);\n  this.markers_ = [];\n};\n\n\n/**\n * Recalculates and redraws all the marker clusters from scratch.\n *  Call this after changing any properties.\n */\nMarkerClusterer.prototype.repaint = function () {\n  var oldClusters = this.clusters_.slice();\n  this.clusters_ = [];\n  this.resetViewport_(false);\n  this.redraw_();\n\n  // Remove the old clusters.\n  // Do it in a timeout to prevent blinking effect.\n  setTimeout(function () {\n    var i;\n    for (i = 0; i < oldClusters.length; i++) {\n      oldClusters[i].remove();\n    }\n  }, 0);\n};\n\n\n/**\n * Returns the current bounds extended by the grid size.\n *\n * @param {google.maps.LatLngBounds} bounds The bounds to extend.\n * @return {google.maps.LatLngBounds} The extended bounds.\n * @ignore\n */\nMarkerClusterer.prototype.getExtendedBounds = function (bounds) {\n  var projection = this.getProjection();\n\n  // Turn the bounds into latlng.\n  var tr = new google.maps.LatLng(bounds.getNorthEast().lat(),\n      bounds.getNorthEast().lng());\n  var bl = new google.maps.LatLng(bounds.getSouthWest().lat(),\n      bounds.getSouthWest().lng());\n\n  // Convert the points to pixels and the extend out by the grid size.\n  var trPix = projection.fromLatLngToDivPixel(tr);\n  trPix.x += this.gridSize_;\n  trPix.y -= this.gridSize_;\n\n  var blPix = projection.fromLatLngToDivPixel(bl);\n  blPix.x -= this.gridSize_;\n  blPix.y += this.gridSize_;\n\n  // Convert the pixel points back to LatLng\n  var ne = projection.fromDivPixelToLatLng(trPix);\n  var sw = projection.fromDivPixelToLatLng(blPix);\n\n  // Extend the bounds to contain the new bounds.\n  bounds.extend(ne);\n  bounds.extend(sw);\n\n  return bounds;\n};\n\n\n/**\n * Redraws all the clusters.\n */\nMarkerClusterer.prototype.redraw_ = function () {\n  this.createClusters_(0);\n};\n\n\n/**\n * Removes all clusters from the map. The markers are also removed from the map\n *  if <code>opt_hide</code> is set to <code>true</code>.\n *\n * @param {boolean} [opt_hide] Set to <code>true</code> to also remove the markers\n *  from the map.\n */\nMarkerClusterer.prototype.resetViewport_ = function (opt_hide) {\n  var i, marker;\n  // Remove all the clusters\n  for (i = 0; i < this.clusters_.length; i++) {\n    this.clusters_[i].remove();\n  }\n  this.clusters_ = [];\n\n  // Reset the markers to not be added and to be removed from the map.\n  for (i = 0; i < this.markers_.length; i++) {\n    marker = this.markers_[i];\n    marker.isAdded = false;\n    if (opt_hide) {\n      marker.setMap(null);\n    }\n  }\n};\n\n\n/**\n * Calculates the distance between two latlng locations in km.\n *\n * @param {google.maps.LatLng} p1 The first lat lng point.\n * @param {google.maps.LatLng} p2 The second lat lng point.\n * @return {number} The distance between the two points in km.\n * @see http://www.movable-type.co.uk/scripts/latlong.html\n*/\nMarkerClusterer.prototype.distanceBetweenPoints_ = function (p1, p2) {\n  var R = 6371; // Radius of the Earth in km\n  var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n  var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) *\n    Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c;\n  return d;\n};\n\n\n/**\n * Determines if a marker is contained in a bounds.\n *\n * @param {google.maps.Marker} marker The marker to check.\n * @param {google.maps.LatLngBounds} bounds The bounds to check against.\n * @return {boolean} True if the marker is in the bounds.\n */\nMarkerClusterer.prototype.isMarkerInBounds_ = function (marker, bounds) {\n  return bounds.contains(marker.getPosition());\n};\n\n\n/**\n * Adds a marker to a cluster, or creates a new cluster.\n *\n * @param {google.maps.Marker} marker The marker to add.\n */\nMarkerClusterer.prototype.addToClosestCluster_ = function (marker) {\n  var i, d, cluster, center;\n  var distance = 40000; // Some large number\n  var clusterToAddTo = null;\n  for (i = 0; i < this.clusters_.length; i++) {\n    cluster = this.clusters_[i];\n    center = cluster.getCenter();\n    if (center) {\n      d = this.distanceBetweenPoints_(center, marker.getPosition());\n      if (d < distance) {\n        distance = d;\n        clusterToAddTo = cluster;\n      }\n    }\n  }\n\n  if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n    clusterToAddTo.addMarker(marker);\n  } else {\n    cluster = new Cluster(this);\n    cluster.addMarker(marker);\n    this.clusters_.push(cluster);\n  }\n};\n\n\n/**\n * Creates the clusters. This is done in batches to avoid timeout errors\n *  in some browsers when there is a huge number of markers.\n *\n * @param {number} iFirst The index of the first marker in the batch of\n *  markers to be added to clusters.\n */\nMarkerClusterer.prototype.createClusters_ = function (iFirst) {\n  var i, marker;\n  var mapBounds;\n  var cMarkerClusterer = this;\n  if (!this.ready_) {\n    return;\n  }\n\n  // Cancel previous batch processing if we're working on the first batch:\n  if (iFirst === 0) {\n    /**\n     * This event is fired when the <code>MarkerClusterer</code> begins\n     *  clustering markers.\n     * @name MarkerClusterer#clusteringbegin\n     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.\n     * @event\n     */\n    google.maps.event.trigger(this, \"clusteringbegin\", this);\n\n    if (typeof this.timerRefStatic !== \"undefined\") {\n      clearTimeout(this.timerRefStatic);\n      delete this.timerRefStatic;\n    }\n  }\n\n  // Get our current map view bounds.\n  // Create a new bounds object so we don't affect the map.\n  //\n  // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n  if (this.getMap().getZoom() > 3) {\n    mapBounds = new google.maps.LatLngBounds(this.getMap().getBounds().getSouthWest(),\n      this.getMap().getBounds().getNorthEast());\n  } else {\n    mapBounds = new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));\n  }\n  var bounds = this.getExtendedBounds(mapBounds);\n\n  var iLast = Math.min(iFirst + this.batchSize_, this.markers_.length);\n\n  for (i = iFirst; i < iLast; i++) {\n    marker = this.markers_[i];\n    if (!marker.isAdded && this.isMarkerInBounds_(marker, bounds)) {\n      if (!this.ignoreHidden_ || (this.ignoreHidden_ && marker.getVisible())) {\n        this.addToClosestCluster_(marker);\n      }\n    }\n  }\n\n  if (iLast < this.markers_.length) {\n    this.timerRefStatic = setTimeout(function () {\n      cMarkerClusterer.createClusters_(iLast);\n    }, 0);\n  } else {\n    delete this.timerRefStatic;\n\n    /**\n     * This event is fired when the <code>MarkerClusterer</code> stops\n     *  clustering markers.\n     * @name MarkerClusterer#clusteringend\n     * @param {MarkerClusterer} mc The MarkerClusterer whose markers are being clustered.\n     * @event\n     */\n    google.maps.event.trigger(this, \"clusteringend\", this);\n  }\n};\n\n\n/**\n * Extends an object's prototype by another's.\n *\n * @param {Object} obj1 The object to be extended.\n * @param {Object} obj2 The object to extend with.\n * @return {Object} The new extended object.\n * @ignore\n */\nMarkerClusterer.prototype.extend = function (obj1, obj2) {\n  return (function (object) {\n    var property;\n    for (property in object.prototype) {\n      this.prototype[property] = object.prototype[property];\n    }\n    return this;\n  }).apply(obj1, [obj2]);\n};\n\n\n/**\n * The default function for determining the label text and style\n * for a cluster icon.\n *\n * @param {Array.<google.maps.Marker>} markers The array of markers represented by the cluster.\n * @param {number} numStyles The number of marker styles available.\n * @return {ClusterIconInfo} The information resource for the cluster.\n * @constant\n * @ignore\n */\nMarkerClusterer.CALCULATOR = function (markers, numStyles) {\n  var index = 0;\n  var title = \"\";\n  var count = markers.length.toString();\n\n  var dv = count;\n  while (dv !== 0) {\n    dv = parseInt(dv / 10, 10);\n    index++;\n  }\n\n  index = Math.min(index, numStyles);\n  return {\n    text: count,\n    index: index,\n    title: title\n  };\n};\n\n\n/**\n * The number of markers to process in one batch.\n *\n * @type {number}\n * @constant\n */\nMarkerClusterer.BATCH_SIZE = 2000;\n\n\n/**\n * The number of markers to process in one batch (IE only).\n *\n * @type {number}\n * @constant\n */\nMarkerClusterer.BATCH_SIZE_IE = 500;\n\n\n/**\n * The default root name for the marker cluster images.\n *\n * @type {string}\n * @constant\n */\nMarkerClusterer.IMAGE_PATH = \"https://raw.githubusercontent.com/googlemaps/v3-utility-library/master/markerclustererplus/images/m\";\n\n\n/**\n * The default extension name for the marker cluster images.\n *\n * @type {string}\n * @constant\n */\nMarkerClusterer.IMAGE_EXTENSION = \"png\";\n\n\n/**\n * The default array of sizes for the marker cluster images.\n *\n * @type {Array.<number>}\n * @constant\n */\nMarkerClusterer.IMAGE_SIZES = [53, 56, 66, 78, 90];\n\nmodule.exports = MarkerClusterer\n","\"use strict\"\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true,\n})\nexports.MarkerClusterer = undefined\n\nvar _defineProperty2 = require(\"babel-runtime/helpers/defineProperty\")\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2)\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\")\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf)\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\")\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2)\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\")\n\nvar _createClass3 = _interopRequireDefault(_createClass2)\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\")\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(\n  _possibleConstructorReturn2\n)\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\")\n\nvar _inherits3 = _interopRequireDefault(_inherits2)\n\nvar _MarkerClusterer$chil\n\nvar _react = require(\"react\")\n\nvar _react2 = _interopRequireDefault(_react)\n\nvar _propTypes = require(\"prop-types\")\n\nvar _propTypes2 = _interopRequireDefault(_propTypes)\n\nvar _markerClustererPlus = require(\"marker-clusterer-plus\")\n\nvar _markerClustererPlus2 = _interopRequireDefault(_markerClustererPlus)\n\nvar _MapChildHelper = require(\"../../utils/MapChildHelper\")\n\nvar _constants = require(\"../../constants\")\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj }\n}\n\n/**\n * A wrapper around `MarkerClusterer`\n *\n * @see https://github.com/mahnunchik/markerclustererplus/blob/master/docs/reference.html\n */\nvar MarkerClusterer = (exports.MarkerClusterer = (function(\n  _React$PureComponent\n) {\n  ;(0, _inherits3.default)(MarkerClusterer, _React$PureComponent)\n\n  /*\n   * @see https://github.com/mahnunchik/markerclustererplus/blob/master/docs/reference.html\n   */\n  function MarkerClusterer(props, context) {\n    ;(0, _classCallCheck3.default)(this, MarkerClusterer)\n\n    var _this = (0, _possibleConstructorReturn3.default)(\n      this,\n      (\n        MarkerClusterer.__proto__ ||\n        (0, _getPrototypeOf2.default)(MarkerClusterer)\n      ).call(this, props, context)\n    )\n\n    var markerClusterer = new _markerClustererPlus2.default()\n    ;(0, _MapChildHelper.construct)(\n      MarkerClusterer.propTypes,\n      updaterMap,\n      _this.props,\n      markerClusterer\n    )\n    markerClusterer.setMap(_this.context[_constants.MAP])\n    _this.state = (0, _defineProperty3.default)(\n      {},\n      _constants.MARKER_CLUSTERER,\n      markerClusterer\n    )\n    return _this\n  }\n\n  ;(0, _createClass3.default)(MarkerClusterer, [\n    {\n      key: \"getChildContext\",\n      value: function getChildContext() {\n        var _ref\n\n        var markerClusterer = this.state[_constants.MARKER_CLUSTERER]\n        return (\n          (_ref = {}),\n          (0, _defineProperty3.default)(\n            _ref,\n            _constants.ANCHOR,\n            markerClusterer\n          ),\n          (0, _defineProperty3.default)(\n            _ref,\n            _constants.MARKER_CLUSTERER,\n            markerClusterer\n          ),\n          _ref\n        )\n      },\n    },\n    {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        ;(0, _MapChildHelper.componentDidMount)(\n          this,\n          this.state[_constants.MARKER_CLUSTERER],\n          eventMap\n        )\n      },\n    },\n    {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        ;(0, _MapChildHelper.componentDidUpdate)(\n          this,\n          this.state[_constants.MARKER_CLUSTERER],\n          eventMap,\n          updaterMap,\n          prevProps\n        )\n        this.state[_constants.MARKER_CLUSTERER].repaint()\n      },\n    },\n    {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        ;(0, _MapChildHelper.componentWillUnmount)(this)\n        var markerClusterer = this.state[_constants.MARKER_CLUSTERER]\n        if (markerClusterer) {\n          markerClusterer.setMap(null)\n        }\n      },\n    },\n    {\n      key: \"render\",\n      value: function render() {\n        var children = this.props.children\n\n        return _react2.default.createElement(\"div\", null, children)\n      },\n    },\n  ])\n  return MarkerClusterer\n})(_react2.default.PureComponent))\n\nMarkerClusterer.propTypes = {\n  /**\n   * @type boolean\n   */\n  defaultAverageCenter: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  defaultBatchSizeIE: _propTypes2.default.number,\n\n  /**\n   * @type number\n   */\n  defaultBatchSize: _propTypes2.default.number,\n\n  /**\n   * @type function\n   */\n  defaultCalculator: _propTypes2.default.func,\n\n  /**\n   * @type string\n   */\n  defaultClusterClass: _propTypes2.default.string,\n\n  /**\n   * @type boolean\n   */\n  defaultEnableRetinaIcons: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  defaultGridSize: _propTypes2.default.number,\n\n  /**\n   * @type boolean\n   */\n  defaultIgnoreHidden: _propTypes2.default.bool,\n\n  /**\n   * @type string\n   */\n  defaultImageExtension: _propTypes2.default.string,\n\n  /**\n   * @type string\n   */\n  defaultImagePath: _propTypes2.default.string,\n\n  /**\n   * @type Array\n   */\n  defaultImageSizes: _propTypes2.default.array,\n\n  /**\n   * @type number\n   */\n  defaultMaxZoom: _propTypes2.default.number,\n\n  /**\n   * @type number\n   */\n  defaultMinimumClusterSize: _propTypes2.default.number,\n\n  /**\n   * @type Array\n   */\n  defaultStyles: _propTypes2.default.array,\n\n  /**\n   * @type string\n   */\n  defaultTitle: _propTypes2.default.string,\n\n  /**\n   * @type boolean\n   */\n  defaultZoomOnClick: _propTypes2.default.bool,\n\n  /**\n   * @type boolean\n   */\n  averageCenter: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  batchSizeIE: _propTypes2.default.number,\n\n  /**\n   * @type number\n   */\n  batchSize: _propTypes2.default.number,\n\n  /**\n   * @type function\n   */\n  calculator: _propTypes2.default.func,\n\n  /**\n   * @type string\n   */\n  clusterClass: _propTypes2.default.string,\n\n  /**\n   * @type boolean\n   */\n  enableRetinaIcons: _propTypes2.default.bool,\n\n  /**\n   * @type number\n   */\n  gridSize: _propTypes2.default.number,\n\n  /**\n   * @type boolean\n   */\n  ignoreHidden: _propTypes2.default.bool,\n\n  /**\n   * @type string\n   */\n  imageExtension: _propTypes2.default.string,\n\n  /**\n   * @type string\n   */\n  imagePath: _propTypes2.default.string,\n\n  /**\n   * @type Array\n   */\n  imageSizes: _propTypes2.default.array,\n\n  /**\n   * @type number\n   */\n  maxZoom: _propTypes2.default.number,\n\n  /**\n   * @type number\n   */\n  minimumClusterSize: _propTypes2.default.number,\n\n  /**\n   * @type Array\n   */\n  styles: _propTypes2.default.array,\n\n  /**\n   * @type string\n   */\n  title: _propTypes2.default.string,\n\n  /**\n   * @type boolean\n   */\n  zoomOnClick: _propTypes2.default.bool,\n\n  /**\n   * function\n   */\n  onClick: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onClusteringBegin: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onClusteringEnd: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onMouseOut: _propTypes2.default.func,\n\n  /**\n   * function\n   */\n  onMouseOver: _propTypes2.default.func,\n}\nMarkerClusterer.contextTypes = (0, _defineProperty3.default)(\n  {},\n  _constants.MAP,\n  _propTypes2.default.object\n)\nMarkerClusterer.childContextTypes = ((_MarkerClusterer$chil = {}),\n(0, _defineProperty3.default)(\n  _MarkerClusterer$chil,\n  _constants.ANCHOR,\n  _propTypes2.default.object\n),\n(0, _defineProperty3.default)(\n  _MarkerClusterer$chil,\n  _constants.MARKER_CLUSTERER,\n  _propTypes2.default.object\n),\n_MarkerClusterer$chil)\nexports.default = MarkerClusterer\n\nvar eventMap = {\n  onClick: \"click\",\n  onClusteringBegin: \"clusteringbegin\",\n  onClusteringEnd: \"clusteringend\",\n  onMouseOut: \"mouseout\",\n  onMouseOver: \"mouseover\",\n}\n\nvar updaterMap = {\n  averageCenter: function averageCenter(instance, _averageCenter) {\n    instance.setAverageCenter(_averageCenter)\n  },\n  batchSizeIE: function batchSizeIE(instance, _batchSizeIE) {\n    instance.setBatchSizeIE(_batchSizeIE)\n  },\n  batchSize: function batchSize(instance, _batchSize) {\n    instance.setBatchSize(_batchSize)\n  },\n  calculator: function calculator(instance, _calculator) {\n    instance.setCalculator(_calculator)\n  },\n  clusterClass: function clusterClass(instance, _clusterClass) {\n    instance.setClusterClass(_clusterClass)\n  },\n  enableRetinaIcons: function enableRetinaIcons(instance, _enableRetinaIcons) {\n    instance.setEnableRetinaIcons(_enableRetinaIcons)\n  },\n  gridSize: function gridSize(instance, _gridSize) {\n    instance.setGridSize(_gridSize)\n  },\n  ignoreHidden: function ignoreHidden(instance, _ignoreHidden) {\n    instance.setIgnoreHidden(_ignoreHidden)\n  },\n  imageExtension: function imageExtension(instance, _imageExtension) {\n    instance.setImageExtension(_imageExtension)\n  },\n  imagePath: function imagePath(instance, _imagePath) {\n    instance.setImagePath(_imagePath)\n  },\n  imageSizes: function imageSizes(instance, _imageSizes) {\n    instance.setImageSizes(_imageSizes)\n  },\n  maxZoom: function maxZoom(instance, _maxZoom) {\n    instance.setMaxZoom(_maxZoom)\n  },\n  minimumClusterSize: function minimumClusterSize(\n    instance,\n    _minimumClusterSize\n  ) {\n    instance.setMinimumClusterSize(_minimumClusterSize)\n  },\n  styles: function styles(instance, _styles) {\n    instance.setStyles(_styles)\n  },\n  title: function title(instance, _title) {\n    instance.setTitle(_title)\n  },\n  zoomOnClick: function zoomOnClick(instance, _zoomOnClick) {\n    instance.setZoomOnClick(_zoomOnClick)\n  },\n}\n","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactRouterDom = require('react-router-dom');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\nvar LinkContainer = function (_Component) {\n  _inherits(LinkContainer, _Component);\n\n  function LinkContainer() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, LinkContainer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      var _this$props = _this.props,\n          children = _this$props.children,\n          onClick = _this$props.onClick;\n\n\n      if (children.props.onClick) {\n        children.props.onClick(event);\n      }\n\n      if (onClick) {\n        onClick(event);\n      }\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore right clicks\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props2 = _this.props,\n              replace = _this$props2.replace,\n              to = _this$props2.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  LinkContainer.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        children = _props.children,\n        replace = _props.replace,\n        to = _props.to,\n        exact = _props.exact,\n        strict = _props.strict,\n        activeClassName = _props.activeClassName,\n        className = _props.className,\n        activeStyle = _props.activeStyle,\n        style = _props.style,\n        getIsActive = _props.isActive,\n        props = _objectWithoutProperties(_props, ['children', 'replace', 'to', 'exact', 'strict', 'activeClassName', 'className', 'activeStyle', 'style', 'isActive']);\n\n    var href = this.context.router.history.createHref(typeof to === 'string' ? { pathname: to } : to);\n\n    var child = _react2.default.Children.only(children);\n\n    return _react2.default.createElement(_reactRouterDom.Route, {\n      path: (typeof to === 'undefined' ? 'undefined' : _typeof(to)) === 'object' ? to.pathname : to,\n      exact: exact,\n      strict: strict,\n      children: function children(_ref) {\n        var location = _ref.location,\n            match = _ref.match;\n\n        var isActive = !!(getIsActive ? getIsActive(match, location) : match);\n\n        return _react2.default.cloneElement(child, _extends({}, props, {\n          className: [className, child.props.className, isActive ? activeClassName : null].join(' ').trim(),\n          style: isActive ? _extends({}, style, activeStyle) : style,\n          href: href,\n          onClick: _this2.handleClick\n        }));\n      }\n    });\n  };\n\n  return LinkContainer;\n}(_react.Component);\n\nLinkContainer.contextTypes = {\n  router: _propTypes2.default.shape({\n    history: _propTypes2.default.shape({\n      push: _propTypes2.default.func.isRequired,\n      replace: _propTypes2.default.func.isRequired,\n      createHref: _propTypes2.default.func.isRequired\n    }).isRequired\n  }).isRequired\n};\nLinkContainer.propTypes = {\n  children: _propTypes2.default.element.isRequired,\n  onClick: _propTypes2.default.func,\n  replace: _propTypes2.default.bool,\n  to: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]).isRequired,\n  exact: _propTypes2.default.bool,\n  strict: _propTypes2.default.bool,\n  className: _propTypes2.default.string,\n  activeClassName: _propTypes2.default.string,\n  style: _propTypes2.default.object,\n  activeStyle: _propTypes2.default.object,\n  isActive: _propTypes2.default.func\n};\nLinkContainer.defaultProps = {\n  replace: false,\n  exact: false,\n  strict: false,\n  activeClassName: 'active'\n};\nexports.default = LinkContainer;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _LinkContainer = require('./LinkContainer');\n\nvar _LinkContainer2 = _interopRequireDefault(_LinkContainer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Don't use a stateless function, to allow users to set a ref.\n/* eslint-disable react/prefer-stateless-function */\nvar IndexLinkContainer = function (_React$Component) {\n  _inherits(IndexLinkContainer, _React$Component);\n\n  function IndexLinkContainer() {\n    _classCallCheck(this, IndexLinkContainer);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  IndexLinkContainer.prototype.render = function render() {\n    return _react2.default.createElement(_LinkContainer2.default, _extends({}, this.props, { exact: true }));\n  };\n\n  return IndexLinkContainer;\n}(_react2.default.Component);\n/* eslint-enable react/prefer-stateless-function */\n\n\nexports.default = IndexLinkContainer;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports.LinkContainer = exports.IndexLinkContainer = undefined;\n\nvar _IndexLinkContainer2 = require('./IndexLinkContainer');\n\nvar _IndexLinkContainer3 = _interopRequireDefault(_IndexLinkContainer2);\n\nvar _LinkContainer2 = require('./LinkContainer');\n\nvar _LinkContainer3 = _interopRequireDefault(_LinkContainer2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.IndexLinkContainer = _IndexLinkContainer3.default;\nexports.LinkContainer = _LinkContainer3.default;"],"sourceRoot":""}