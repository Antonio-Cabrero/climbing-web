{"version":3,"sources":["webpack:///./app/components/area.js","webpack:///./app/components/common/map/map.js","webpack:///./app/components/common/gallery/gallery.js"],"names":["_react","__webpack_require__","r","g","l","i","_reactRouterDom","s","_reactBootstrap","_reactRouterBootstrap","d","h","f","m","_reactFontawesome","e","__esModule","default","y","t","TypeError","b","ReferenceError","v","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","TableRow","Component","comment","this","props","sector","length","tooltip","_react2","createElement","Tooltip","id","OverlayTrigger","key","placement","overlay","substring","Link","to","name","visibility","FontAwesomeIcon","icon","numProblems","Area","_classCallCheck","_this2","_possibleConstructorReturn","getPrototypeOf","call","state","tabIndex","_this3","Request","get","config","getUrl","getRegion","withCredentials","end","err","res","setState","error","body","media","lat","lng","sectors","metadata","refresh","match","params","areaId","nextProps","idMediaToRemove","allMedia","filter","spin","size","status","toString","rows","map","markers","title","url","scaledSizeW","scaledSizeH","polygons","polygonCoords","triangleCoords","split","p","latLng","parseFloat","defaultCenter","getDefaultCenter","defaultZoom","getDefaultZoom","_map2","gallery","_gallery2","alt","showThumbnails","removeMedia","onRemoveMedia","bind","topoContent","Tabs","activeKey","animation","onSelect","handleTabsSelection","unmountOnExit","Tab","eventKey","_reactMetaTags2","type","JSON","stringify","jsonLd","content","description","Breadcrumb","auth","isAdmin","style","float","ButtonGroup","LinkContainer","pathname","query","idArea","Button","bsStyle","bsSize","inverse","color","Well","dangerouslySetInnerHTML","__html","Table","striped","condensed","hover","u","_reactRouter","_reactGoogleMaps","Map","navigator","geolocation","getCurrentPosition","position","currLat","coords","latitude","currLng","longitude","pushUrl","Redirect","push","GettingStartedGoogleMap","withScriptjs","withGoogleMap","myIcon","scaledSize","google","maps","Size","labelOriginX","labelOriginY","labelOrigin","Point","Marker","label","clickable","onClick","handleOnClick","Polygon","paths","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","GoogleMap","defaultMapTypeId","MapTypeId","TERRAIN","_MarkerClusterer2","averageCenter","minimumClusterSize","enableRetinaIcons","imagePath","gridSize","height","googleMapURL","loadingElement","containerElement","mapElement","c","_svgPathParser","Gallery","_this","mediaIndex","hoverTrash","hoverEdit","showFullscreenButton","showGalleryFullscreenButton","showPlayButton","showGalleryPlayButton","showVideo","isFullscreen","imageGallery","slideToIndex","event","confirm","idMedia","delete","alert","nextMediaIndex","index","resetVideo","fullscreenElement","Boolean","item","className","embedUrl","toggleShowVideo","_reactPlayer2","ref","player","width","onDuration","duration","onStart","seekTo","controls","playing","src","original","svgs","svgProblemId","w","_this4","svg","ixNr","path","parseSVG","makeAbsolute","ixAnchor","maxY","minY","len","x","anchor","hasAnchor","cx","cy","problemId","strokeWidth","strokeDasharray","fontSize","dy","nr","viewBox","preserveAspectRatio","xlinkHref","generateShapes","_this5","_objectFitImages2","watchMQ","caruselItems","idType","thumbnail","originalClass","thumbnailClass","originalAlt","thumbnailAlt","renderItem","renderImage","Math","floor","renderVideo","button","zIndex","background","padding","onMouseEnter","toggleHoverEdit","onMouseLeave","transform","href","toggleHoverTrash","onDeleteImage","_reactImageGallery2","items","onSlide","onScreenChange","showBullets","showIndex"],"mappings":"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","file":"7.index.js","sourcesContent":["import React, {Component} from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\nimport { Link } from 'react-router-dom';\r\nimport Request from 'superagent';\r\nimport { Tabs, Tab, Well, OverlayTrigger, Tooltip, ButtonGroup, Button, Table, Breadcrumb } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Map from './common/map/map';\r\nimport Gallery from './common/gallery/gallery';\r\nimport auth from '../utils/auth.js';\r\nimport config from '../utils/config.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass TableRow extends Component {\r\n  render() {\r\n    var comment = \"\";\r\n    if (this.props.sector.comment) {\r\n      if (this.props.sector.comment.length>100) {\r\n        const tooltip = (<Tooltip id={this.props.sector.id}>{this.props.sector.comment}</Tooltip>);\r\n        comment = <OverlayTrigger key={this.props.sector.id} placement=\"top\" overlay={tooltip}><span>{this.props.sector.comment.substring(0,100) + \"...\"}</span></OverlayTrigger>;\r\n      } else {\r\n        comment = this.props.sector.comment;\r\n      }\r\n    }\r\n    return (\r\n      <tr>\r\n        <td><Link to={`/sector/${this.props.sector.id}`}>{this.props.sector.name}</Link> {this.props.sector.visibility===1 && <FontAwesomeIcon icon=\"lock\" />}{this.props.sector.visibility===2 && <FontAwesomeIcon icon=\"user-secret\" />}</td>\r\n        <td>{comment}</td>\r\n        <td>{this.props.sector.numProblems}</td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class Area extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tabIndex: 1\r\n    };\r\n  }\r\n\r\n  refresh(id) {\r\n    Request.get(config.getUrl(\"areas?regionId=\" + config.getRegion() + \"&id=\" + id)).withCredentials().end((err, res) => {\r\n      if (err) {\r\n        this.setState({error: err});\r\n      } else {\r\n        this.setState({\r\n          id: res.body.id,\r\n          visibility: res.body.visibility,\r\n          name: res.body.name,\r\n          media: res.body.media,\r\n          comment: res.body.comment,\r\n          lat: res.body.lat,\r\n          lng: res.body.lng,\r\n          sectors: res.body.sectors,\r\n          metadata: res.body.metadata\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refresh(this.props.match.params.areaId);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.refresh(nextProps.match.params.areaId);\r\n  }\r\n\r\n  handleTabsSelection(key) {\r\n    this.setState({tabIndex: key});\r\n  }\r\n\r\n  onRemoveMedia(idMediaToRemove) {\r\n    const allMedia = this.state.media.filter(m => m.id!=idMediaToRemove);\r\n    this.setState({media: allMedia});\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.id) {\r\n      return <center><FontAwesomeIcon icon=\"spinner\" spin size=\"3x\" /></center>;\r\n    }\r\n    if (this.state.error) {\r\n      return <span><h3>{this.state.error.status}</h3>{this.state.error.toString()}</span>;\r\n    }\r\n    const rows = this.state.sectors.map((sector, i) => {\r\n      return (\r\n        <TableRow sector={sector} key={i} />\r\n      )\r\n    });\r\n    const markers = this.state.sectors.filter(s => s.lat!=0 && s.lng!=0).map(s => {\r\n      return {\r\n          lat: s.lat,\r\n          lng: s.lng,\r\n          title: s.name,\r\n          icon: {\r\n            url: 'https://maps.google.com/mapfiles/kml/shapes/parking_lot_maps.png',\r\n            scaledSizeW: 32,\r\n            scaledSizeH: 32\r\n          },\r\n          url: '/sector/' + s.id\r\n        }\r\n    });\r\n    const polygons = this.state.sectors.filter(s => s.polygonCoords).map(s => {\r\n      const triangleCoords = s.polygonCoords.split(\";\").map((p, i) => {\r\n        const latLng = p.split(\",\");\r\n        return {lat: parseFloat(latLng[0]), lng: parseFloat(latLng[1])};\r\n      });\r\n      return {\r\n        triangleCoords: triangleCoords,\r\n        url: '/sector/' + s.id\r\n      }\r\n    });\r\n    const defaultCenter = this.state.lat && this.state.lat>0? {lat: this.state.lat, lng: this.state.lng} : config.getDefaultCenter();\r\n    const defaultZoom = this.state.lat && this.state.lat>0? 14 : config.getDefaultZoom();\r\n    const map = markers.length>0 || polygons.length>0? <Map markers={markers} polygons={polygons} defaultCenter={defaultCenter} defaultZoom={defaultZoom}/> : null;\r\n    const gallery = this.state.media && this.state.media.length>0? <Gallery alt={this.state.name} media={this.state.media} showThumbnails={this.state.media.length>1} removeMedia={this.onRemoveMedia.bind(this)}/> : null;\r\n    var topoContent = null;\r\n    if (map && gallery) {\r\n      topoContent = (\r\n        <Tabs activeKey={this.state.tabIndex} animation={false} onSelect={this.handleTabsSelection.bind(this)} id=\"area_tab\" unmountOnExit={true}>\r\n          <Tab eventKey={1} title=\"Topo\">{this.state.tabIndex==1? gallery : false}</Tab>\r\n          <Tab eventKey={2} title=\"Map\">{this.state.tabIndex==2? map : false}</Tab>\r\n        </Tabs>\r\n      );\r\n    } else if (map) {\r\n      topoContent = map;\r\n    } else if (gallery) {\r\n      topoContent = gallery;\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        <MetaTags>\r\n          <script type=\"application/ld+json\">{JSON.stringify(this.state.metadata.jsonLd)}</script>\r\n          <title>{this.state.metadata.title}</title>\r\n          <meta name=\"description\" content={this.state.metadata.description} />\r\n        </MetaTags>\r\n        <Breadcrumb>\r\n          {auth.isAdmin()?\r\n            <div style={{float: 'right'}}>\r\n              <ButtonGroup>\r\n                <OverlayTrigger placement=\"top\" overlay={<Tooltip id={-1}>Add sector</Tooltip>}>\r\n                  <LinkContainer to={{ pathname: `/sector/edit/-1`, query: { idArea: this.state.id, lat: this.state.lat, lng: this.state.lng } }}><Button bsStyle=\"primary\" bsSize=\"xsmall\"><FontAwesomeIcon icon=\"plus-square\" inverse={true} /></Button></LinkContainer>\r\n                </OverlayTrigger>\r\n                <OverlayTrigger placement=\"top\" overlay={<Tooltip id={this.state.id}>Edit area</Tooltip>}>\r\n                  <LinkContainer to={{ pathname: `/area/edit/${this.state.id}`, query: { lat: this.state.lat, lng: this.state.lng } }}><Button bsStyle=\"primary\" bsSize=\"xsmall\"><FontAwesomeIcon icon=\"edit\" inverse={true} /></Button></LinkContainer>\r\n                </OverlayTrigger>\r\n              </ButtonGroup>\r\n            </div>:\r\n            null\r\n          }\r\n          <Link to={`/`}>Home</Link> / <Link to={`/browse`}>Browse</Link> / <font color='#777'>{this.state.name}</font> {this.state.visibility===1 && <FontAwesomeIcon icon=\"lock\" />}{this.state.visibility===2 && <FontAwesomeIcon icon=\"user-secret\" />}\r\n        </Breadcrumb>\r\n        {topoContent}\r\n        {this.state.comment? <Well><div dangerouslySetInnerHTML={{ __html: this.state.comment }} /></Well> : null}\r\n        <Table striped condensed hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Description</th>\r\n              <th>#problems</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows}\r\n          </tbody>\r\n        </Table>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, Polygon } from \"react-google-maps\";\r\nimport { default as MarkerClusterer } from 'react-google-maps/lib/components/addons/MarkerClusterer';\r\n\r\nexport default class Map extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.setState({currLat: position.coords.latitude, currLng: position.coords.longitude});\r\n    });\r\n  }\r\n\r\n  handleOnClick(pushUrl) {\r\n    this.setState({pushUrl: pushUrl});\r\n  }\r\n\r\n  render() {\r\n    if (this.state && this.state.pushUrl) {\r\n      return (<Redirect to={this.state.pushUrl} push />);\r\n    }\r\n\r\n    const GettingStartedGoogleMap = withScriptjs(withGoogleMap(props => {\r\n      var markers = null;\r\n      if (this.props.markers) {\r\n        markers = this.props.markers.map((m, i) => {\r\n          var myIcon = {};\r\n          if (m.icon) {\r\n            if (m.icon.url) {\r\n              myIcon.url = m.icon.url;\r\n            }\r\n            if (m.icon.scaledSizeW && m.icon.scaledSizeH) {\r\n              myIcon.scaledSize = new google.maps.Size(m.icon.scaledSizeW, m.icon.scaledSizeH);\r\n            }\r\n            if (m.icon.labelOriginX && m.icon.labelOriginY) {\r\n              myIcon.labelOrigin = new google.maps.Point(m.icon.labelOriginX, m.icon.labelOriginY);\r\n            }\r\n          }\r\n          return (\r\n            <Marker\r\n              icon={myIcon}\r\n              key={i}\r\n              position={{lat: m.lat, lng: m.lng}}\r\n              label={m.label}\r\n              title={m.title}\r\n              clickable={true}\r\n              onClick={this.handleOnClick.bind(this, m.url)}/>\r\n          );\r\n        });\r\n      }\r\n      if (this.state && this.state.currLat && this.state.currLng && this.state.currLat>0 && this.state.currLng>0) {\r\n        markers.push(<Marker\r\n                      key={-1}\r\n                      icon=\"https://maps.gstatic.com/mapfiles/markers2/measle_blue.png\"\r\n                      position={{lat: this.state.currLat, lng: this.state.currLng}}/>)\r\n      }\r\n      var polygons = null;\r\n      if (this.props.polygons) {\r\n        polygons = this.props.polygons.map((p, i) => {\r\n          return (\r\n            <Polygon\r\n              key={i}\r\n              paths={p.triangleCoords}\r\n              options={{strokeColor: '#FF3300', strokeOpacity: '0.5', strokeWeight: '2', fillColor: '#FF3300', fillOpacity: '0.15'}}\r\n              onClick={this.handleOnClick.bind(this, p.url)}/>\r\n          );\r\n        });\r\n      }\r\n      \r\n      return (\r\n        <GoogleMap\r\n          defaultZoom={this.props.defaultZoom}\r\n          defaultCenter={this.props.defaultCenter}\r\n          defaultMapTypeId={google.maps.MapTypeId.TERRAIN}\r\n        >\r\n          <MarkerClusterer\r\n            averageCenter={ false }\r\n            minimumClusterSize={ 60 }\r\n            enableRetinaIcons={ false }\r\n            imagePath={ \"https://raw.githubusercontent.com/googlemaps/js-marker-clusterer/gh-pages/images/m\" }\r\n            gridSize={ 60 }>\r\n            {markers}\r\n            {polygons}\r\n          </MarkerClusterer>\r\n        </GoogleMap>\r\n      );\r\n    }));\r\n\r\n    return (\r\n      <section style={{height: '600px'}}>\r\n        <GettingStartedGoogleMap\r\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCpaVd5518yMB-oiIyP5JnTVWMfrOv4sAI&v=3.exp\"\r\n          loadingElement={<div style={{ height: `100%` }} />}\r\n          containerElement={<div style={{ height: `100%` }} />}\r\n          mapElement={<div style={{ height: `100%` }} />}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport { Well } from 'react-bootstrap';\r\nimport ReactPlayer from 'react-player'\r\nimport auth from '../../../utils/auth.js';\r\nimport Request from 'superagent';\r\nimport {parseSVG, makeAbsolute} from 'svg-path-parser';\r\nimport { Link } from 'react-router-dom';\r\nimport config from '../../../utils/config.js';\r\nimport { Redirect } from 'react-router';\r\nimport objectFitImages from 'object-fit-images'; // objectFit does not work on IE and Edge http://caniuse.com/#search=object-fit\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default class Gallery extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mediaIndex: 0,\r\n      hoverTrash: false,\r\n      hoverEdit: false,\r\n      showFullscreenButton: true,\r\n      showGalleryFullscreenButton: true,\r\n      showPlayButton: true,\r\n      showGalleryPlayButton: false,\r\n      showVideo: {},\r\n      isFullscreen: false,\r\n      pushUrl: null,\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      mediaIndex: 0,\r\n      hoverTrash: false,\r\n      hoverEdit: false,\r\n      showFullscreenButton: true,\r\n      showGalleryFullscreenButton: true,\r\n      showPlayButton: true,\r\n      showGalleryPlayButton: false,\r\n      showVideo: {},\r\n      isFullscreen: false,\r\n      pushUrl: null,\r\n    });\r\n    if (this.imageGallery) {\r\n      this.imageGallery.slideToIndex(0);\r\n    }\r\n  }\r\n\r\n  toggleHoverTrash() {\r\n    this.setState({hoverTrash: !this.state.hoverTrash});\r\n  }\r\n\r\n  toggleHoverEdit() {\r\n    this.setState({hoverEdit: !this.state.hoverEdit});\r\n  }\r\n\r\n  onDeleteImage(event) {\r\n    if (confirm('Are you sure you want to delete this image?')) {\r\n      const idMedia = this.props.media[this.state.mediaIndex].id;\r\n      Request.delete(config.getUrl(\"media?id=\" + idMedia)).withCredentials().end((err, res) => {\r\n        if (err) {\r\n          alert(err.toString());\r\n        } else {\r\n          if (this.props.media.length>1 && this.state.mediaIndex>=this.props.media.length-1) {\r\n            const nextMediaIndex = this.state.mediaIndex-1;\r\n            this.setState({mediaIndex: nextMediaIndex});\r\n            this.imageGallery.slideToIndex(nextMediaIndex);\r\n          }\r\n          this.props.removeMedia(idMedia);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onSlide(index) {\r\n    this.resetVideo();\r\n    this.setState({mediaIndex: index});\r\n  }\r\n\r\n  onScreenChange(fullscreenElement) {\r\n    this.setState({isFullscreen: fullscreenElement});\r\n  }\r\n\r\n  resetVideo() {\r\n    this.setState({showVideo: {}});\r\n\r\n    if (this.state.showPlayButton) {\r\n      this.setState({showGalleryPlayButton: true});\r\n    }\r\n\r\n    if (this.state.showFullscreenButton) {\r\n      this.setState({showGalleryFullscreenButton: true});\r\n    }\r\n  }\r\n\r\n  toggleShowVideo(url) {\r\n    this.state.showVideo[url] = !Boolean(this.state.showVideo[url]);\r\n    this.setState({\r\n      showVideo: this.state.showVideo\r\n    });\r\n\r\n    if (this.state.showVideo[url]) {\r\n      if (this.state.showPlayButton) {\r\n        this.setState({showGalleryPlayButton: false});\r\n      }\r\n\r\n      if (this.state.showFullscreenButton) {\r\n        this.setState({showGalleryFullscreenButton: false});\r\n      }\r\n    }\r\n  }\r\n\r\n  renderVideo(item) {\r\n    return (\r\n      <div className='image-gallery-image'>\r\n        {\r\n          this.state.showVideo[item.embedUrl] ?\r\n            <span>\r\n              <a className='gallery-close-video' onClick={this.toggleShowVideo.bind(this, item.embedUrl)}></a>\r\n              <ReactPlayer\r\n                ref={player => { this.player = player }}\r\n                className='react-player'\r\n                width='100%'\r\n                height='100%'\r\n                url={item.embedUrl}\r\n                onDuration={duration => this.setState({ duration })}\r\n                onStart={() => this.player.seekTo(parseFloat(item.seekTo/this.state.duration))}\r\n                controls={true}\r\n                playing={true} />\r\n            </span>\r\n          :\r\n            <a onClick={this.toggleShowVideo.bind(this, item.embedUrl)}>\r\n              <div className='gallery-play-button'></div>\r\n              <img src={item.original} alt={this.props.alt}/>\r\n            </a>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  pushUrl(url) {\r\n    this.setState({pushUrl: url});\r\n  }\r\n\r\n  generateShapes(svgs, svgProblemId, w, h) {\r\n    return svgs.map((svg, key) => {\r\n      const path = parseSVG(svg.path);\r\n      makeAbsolute(path); // Note: mutates the commands in place!\r\n      var ixNr;\r\n      var maxY = 0;\r\n      var ixAnchor;\r\n      var minY = 99999999;\r\n      for (var i=0, len=path.length; i < len; i++) {\r\n        if (path[i].y > maxY) {\r\n          ixNr = i;\r\n          maxY = path[i].y;\r\n        }\r\n        if (path[i].y < minY) {\r\n          ixAnchor = i;\r\n          minY = path[i].y;\r\n        }\r\n      }\r\n      var x = path[ixNr].x;\r\n      var y = path[ixNr].y;\r\n      const r = 0.012*w;\r\n      if (x < r) x = r;\r\n      if (x > (w-r)) x = w-r;\r\n      if (y < r) y = r;\r\n      if (y > (h-r)) y = h-r;\r\n      var anchor = null;\r\n      if (svg.hasAnchor) {\r\n        anchor = <circle className=\"buldreinfo-svg-ring\" cx={path[ixAnchor].x} cy={path[ixAnchor].y} r={0.006*w}/>\r\n      }\r\n      return (\r\n        <g className={\"buldreinfo-svg-pointer buldreinfo-svg-hover\" + ((svgProblemId===0 || svg.problemId===svgProblemId)? \"\" : \" buldreinfo-svg-opacity\")} key={key} onClick={this.pushUrl.bind(this, \"/problem/\" + svg.problemId)}>\r\n          <path d={svg.path} className=\"buldreinfo-svg-route\" strokeWidth={0.003*w} strokeDasharray={0.006*w}/>\r\n          <circle className=\"buldreinfo-svg-ring\" cx={x} cy={y} r={r}/>\r\n          <text className=\"buldreinfo-svg-routenr\" x={x} y={y} fontSize={0.02*w} dy=\".3em\">{svg.nr}</text>\r\n          {anchor}\r\n        </g>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderImage(m) {\r\n    if (m.svgs) {\r\n      return (\r\n        <div className='image-gallery-image'>\r\n          <canvas className=\"buldreinfo-svg-canvas-ie-hack\" width={m.width} height={m.height}></canvas>\r\n          <svg className=\"buldreinfo-svg\" viewBox={\"0 0 \" + m.width + \" \" + m.height} preserveAspectRatio=\"xMidYMid meet\">\r\n            <image xlinkHref={config.getUrl(`images?id=${m.id}`)} width=\"100%\" height=\"100%\"/>\r\n            {this.generateShapes(m.svgs, m.svgProblemId, m.width, m.height)}\r\n          </svg>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className='image-gallery-image'>\r\n        <img src={config.getUrl(`images?id=${m.id}`)} className=\"buldreinfo-scale-img\" alt={this.props.alt}/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    objectFitImages(null, {watchMQ: true});\r\n    if (this.state && this.state.pushUrl) {\r\n      return (<Redirect to={this.state.pushUrl} push />);\r\n    }\r\n    const caruselItems = this.props.media.map((m, i) => {\r\n      if (m.idType==1) {\r\n        return {\r\n          original: config.getUrl(`images?id=${m.id}`),\r\n          thumbnail: config.getUrl(`images?id=${m.id}`),\r\n          originalClass: 'featured-slide',\r\n          thumbnailClass: 'featured-thumb',\r\n          originalAlt: 'original-alt',\r\n          thumbnailAlt: 'thumbnail-alt',\r\n          renderItem: this.renderImage.bind(this, m)\r\n        }\r\n      }\r\n      else {\r\n        return {\r\n          original: config.getUrl(`images?id=${m.id}`),\r\n          thumbnail: config.getUrl(`images?id=${m.id}`),\r\n          originalClass: 'featured-slide',\r\n          thumbnailClass: 'featured-thumb',\r\n          originalAlt: 'original-alt',\r\n          thumbnailAlt: 'thumbnail-alt',\r\n          embedUrl: 'https://buldreinfo.com/buldreinfo_media/mp4/' + (Math.floor(m.id/100)*100) + \"/\" + m.id + '.mp4',\r\n          seekTo: m.t,\r\n          renderItem: this.renderVideo.bind(this)\r\n        }\r\n      }\r\n    });\r\n\r\n    var button = \"\";\r\n    const m = this.props.media[this.state.mediaIndex];\r\n    if (!this.state.isFullscreen && m.idType==1 && auth.isAdmin()) {\r\n      if (m.svgProblemId>0) {\r\n        button = <span style={{position: 'absolute', zIndex: '4', background: 'rgba(0, 0, 0, 0.4)', padding: '8px 20px'}}><Link to={`/problem/svg-edit/${m.svgProblemId}/${m.id}`} onMouseEnter={this.toggleHoverEdit.bind(this)} onMouseLeave={this.toggleHoverEdit.bind(this)}><FontAwesomeIcon icon=\"edit\" style={this.state.hoverEdit? {transform: 'scale(1.1)', color: '#fff'} : {color: '#fff'}}/></Link></span>;\r\n      } else if (!m.svgs) {\r\n        button = <span style={{position: 'absolute', zIndex: '4', background: 'rgba(0, 0, 0, 0.4)', padding: '8px 20px'}}><a href=\"#\" onMouseEnter={this.toggleHoverTrash.bind(this)} onMouseLeave={this.toggleHoverTrash.bind(this)}><FontAwesomeIcon icon=\"trash\" style={this.state.hoverTrash? {transform: 'scale(1.1)', color: '#fff'} : {color: '#fff'}} onClick={this.onDeleteImage.bind(this)}/></a></span>;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Well className='app'>\r\n        {button}\r\n        <ImageGallery\r\n          ref={i => this.imageGallery = i}\r\n          items={caruselItems}\r\n          onSlide={this.onSlide.bind(this)}\r\n          onScreenChange={this.onScreenChange.bind(this)}\r\n          showThumbnails={this.props.showThumbnails}\r\n          showBullets={this.state.showFullscreenButton && this.state.showGalleryFullscreenButton && this.props.media.length>1}\r\n          showIndex={this.state.showFullscreenButton && this.state.showGalleryFullscreenButton}\r\n          showPlayButton={false}\r\n          showFullscreenButton={this.state.showFullscreenButton && this.state.showGalleryFullscreenButton}/>\r\n      </Well>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}