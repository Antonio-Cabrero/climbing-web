{"version":3,"sources":["webpack:///./app/components/user-edit.js"],"names":["_react","__webpack_require__","s","f","r","_reactRouterDom","_reactRouter","u","_reactBootstrap","d","c","_reactFontawesome","e","__esModule","default","UserEdit","props","t","TypeError","this","__proto__","Object","getPrototypeOf","call","Component","auth","loggedIn","setState","pushUrl","key","value","_this2","Request","get","config","getUrl","getRegion","match","params","userId","withCredentials","end","err","res","message","_react2","createElement","Panel","bsStyle","toString","id","body","username","firstname","lastname","currentPassword","newPassword","newPassword2","event","_this3","preventDefault","validateFirstname","validateLastname","validateUsername","validateCurrentPassword","validateNewPassword","validateNewPassword2","post","send","regionId","state","set","window","history","back","target","length","test","Redirect","to","push","Breadcrumb","Link","color","Well","onSubmit","save","bind","FormGroup","controlId","validationState","ControlLabel","FormControl","type","placeholder","onChange","onFirstnameChanged","Feedback","onLastnameChanged","onUsernameChanged","HelpBlock","onCurrentPasswordChanged","onNewPasswordChanged","onConfirmNewPasswordChanged","ButtonGroup","Button","onClick","onCancel","FontAwesomeIcon","icon","spin","size"],"mappings":"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","file":"24.index.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport Request from 'superagent';\r\nimport { FormGroup, ControlLabel, FormControl, HelpBlock, ButtonGroup, Button, Panel, Breadcrumb, Well } from 'react-bootstrap';\r\nimport auth from '../utils/auth.js';\r\nimport config from '../utils/config.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default class UserEdit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (!auth.loggedIn()) {\r\n      this.setState({pushUrl: \"/login\"});\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    Request.get(config.getUrl(\"users/edit?regionId=\" + config.getRegion() + \"&id=\" + this.props.match.params.userId)).withCredentials().end((err, res) => {\r\n      if (err) {\r\n        this.setState({message: <Panel bsStyle='danger'>{err.toString()}</Panel>});\r\n      } else {\r\n        this.setState({\r\n          id: res.body.id,\r\n          username: res.body.username,\r\n          firstname: res.body.firstname,\r\n          lastname: res.body.lastname,\r\n          currentPassword: null,\r\n          newPassword: null,\r\n          newPassword2: null,\r\n          message: null\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  save(event) {\r\n    event.preventDefault();\r\n    if (this.validateFirstname(null)==='error') {\r\n      this.setState({message: <Panel bsStyle='danger'>Invalid firstname.</Panel>});\r\n    } else if (this.validateLastname(null)==='error') {\r\n      this.setState({message: <Panel bsStyle='danger'>Invalid lastname.</Panel>});\r\n    } else if (this.validateUsername(null)==='error') {\r\n      this.setState({message: <Panel bsStyle='danger'>Invalid username.</Panel>});\r\n    } else if (this.validateCurrentPassword(null)==='error' || this.validateNewPassword(null)==='error' || this.validateNewPassword2(null)==='error') {\r\n      this.setState({message: <Panel bsStyle='danger'>Invalid password.</Panel>});\r\n    } else {\r\n      Request.post(config.getUrl(\"users/edit\"))\r\n      .withCredentials()\r\n      .send({regionId: config.getRegion(), id: this.state.id, username: this.state.username, firstname: this.state.firstname, lastname: this.state.lastname, currentPassword: this.state.currentPassword, newPassword: this.state.newPassword})\r\n      .set('Accept', 'application/json')\r\n      .end((err, res) => {\r\n        if (err) {\r\n          this.setState({message: <Panel bsStyle='danger'>{err.toString()}</Panel>});\r\n        } else {\r\n          this.setState({pushUrl: \"/user\"});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancel() {\r\n    window.history.back();\r\n  }\r\n\r\n  onFirstnameChanged(e) {\r\n    this.setState({firstname: e.target.value});\r\n  }\r\n\r\n  onLastnameChanged(e) {\r\n    this.setState({lastname: e.target.value});\r\n  }\r\n\r\n  onUsernameChanged(e) {\r\n    this.setState({username: e.target.value});\r\n  }\r\n\r\n  onCurrentPasswordChanged(e) {\r\n    this.setState({currentPassword: e.target.value});\r\n  }\r\n\r\n  onNewPasswordChanged(e) {\r\n    this.setState({newPassword: e.target.value});\r\n  }\r\n\r\n  onConfirmNewPasswordChanged(e) {\r\n    this.setState({newPassword2: e.target.value});\r\n  }\r\n\r\n  validateFirstname() {\r\n    if (this.state.firstname.length < 1) {\r\n      return 'error';\r\n    }\r\n    return 'success';\r\n  }\r\n\r\n  validateLastname() {\r\n    if (this.state.lastname.length < 1) {\r\n      return 'error';\r\n    }\r\n    return 'success';\r\n  }\r\n\r\n  validateUsername() {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!re.test(this.state.username)) {\r\n      return 'error';\r\n    }\r\n    return 'success';\r\n  }\r\n\r\n  validateCurrentPassword() {\r\n    return 'success';\r\n  }\r\n\r\n  validateNewPassword() {\r\n    if ((this.state.currentPassword || this.state.newPassword2) && !this.state.newPassword) return 'error';\r\n    else if (this.state.newPassword && this.state.newPassword.length < 8) return 'error';\r\n    return 'success';\r\n  }\r\n\r\n  validateNewPassword2() {\r\n    if ((this.state.currentPassword || this.state.newPassword) && !this.state.newPassword2) return 'error';\r\n    else if (this.state.newPassword2 && this.state.newPassword2.length < 8) return 'error';\r\n    else if (this.state.newPassword2 && this.state.newPassword!=this.state.newPassword2) return 'error';\r\n    return 'success';\r\n  }\r\n\r\n  render() {\r\n    if (!this.state) {\r\n      return <center><FontAwesomeIcon icon=\"spinner\" spin size=\"3x\" /></center>;\r\n    }\r\n    else if (this.state.pushUrl) {\r\n      return (<Redirect to={this.state.pushUrl} push />);\r\n    }\r\n    return (\r\n      <span>\r\n        <Breadcrumb>\r\n          <Link to={`/`}>Home</Link> / <font color='#777'>User edit</font>\r\n        </Breadcrumb>\r\n        <Well>\r\n          {this.state.message}\r\n          <form onSubmit={this.save.bind(this)}>\r\n            <FormGroup controlId=\"formControlsFirstname\" validationState={this.validateFirstname()}>\r\n              <ControlLabel>Firstname</ControlLabel>\r\n              <FormControl type=\"text\" value={this.state.firstname} placeholder=\"Enter firstname\" onChange={this.onFirstnameChanged.bind(this)} />\r\n              <FormControl.Feedback />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsLastname\" validationState={this.validateLastname()}>\r\n              <ControlLabel>Lastname</ControlLabel>\r\n              <FormControl type=\"text\" value={this.state.lastname} placeholder=\"Enter lastname\" onChange={this.onLastnameChanged.bind(this)} />\r\n              <FormControl.Feedback />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsUsername\" validationState={this.validateUsername()}>\r\n              <ControlLabel>Username</ControlLabel>\r\n              <FormControl type=\"email\" value={this.state.username} placeholder=\"Enter username\" onChange={this.onUsernameChanged.bind(this)} />\r\n              <FormControl.Feedback />\r\n              <HelpBlock>You must enter a valid email address.</HelpBlock>\r\n            </FormGroup>\r\n            <hr/>\r\n            <h4>Only fill following fields if you want to change your password</h4>\r\n            <FormGroup controlId=\"formControlsCurrentPassword\" validationState={this.validateCurrentPassword()}>\r\n              <ControlLabel>Current password</ControlLabel>\r\n              <FormControl type=\"password\" placeholder=\"Enter current password\" onChange={this.onCurrentPasswordChanged.bind(this)} />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsNewPassword\" validationState={this.validateNewPassword()}>\r\n              <ControlLabel>New password</ControlLabel>\r\n              <FormControl type=\"password\" placeholder=\"Enter new password\" onChange={this.onNewPasswordChanged.bind(this)} />\r\n              <FormControl.Feedback />\r\n              <HelpBlock>At least 8 characters.</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"formControlsNewPassword2\" validationState={this.validateNewPassword2()}>\r\n              <ControlLabel>Confirm new password</ControlLabel>\r\n              <FormControl type=\"password\" placeholder=\"Confirm new password\" onChange={this.onConfirmNewPasswordChanged.bind(this)} />\r\n              <FormControl.Feedback />\r\n              <HelpBlock>Must match new password.</HelpBlock>\r\n            </FormGroup>\r\n\r\n            <ButtonGroup>\r\n              <Button bsStyle=\"danger\" onClick={this.onCancel.bind(this)}>Cancel</Button>\r\n              <Button type=\"submit\" bsStyle=\"success\">Save</Button>\r\n            </ButtonGroup>\r\n          </form>\r\n        </Well>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}