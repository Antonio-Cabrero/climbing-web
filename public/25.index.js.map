{"version":3,"sources":["webpack:///./app/components/area-edit.js"],"names":["_react","__webpack_require__","l","h","i","o","_reactRouter","_reactBootstrap","u","_reactGoogleMaps","c","f","m","e","__esModule","default","GettingStartedGoogleMap","withGoogleMap","props","_react2","createElement","GoogleMap","defaultZoom","defaultCenter","defaultMapTypeId","google","maps","MapTypeId","TERRAIN","onClick","bind","markers","AreaEdit","_auth2","isAdmin","this","setState","pushUrl","error","key","value","_this2","document","title","_config2","getTitle","match","params","areaId","id","visibility","name","comment","lat","lng","newMedia","_superagent2","get","getUrl","withCredentials","end","err","res","body","target","event","_this3","preventDefault","isSaving","state","map","file","replace","photographer","inPhoto","req","post","field","JSON","stringify","regionId","getRegion","set","forEach","attach","latLng","window","history","back","_reactFontawesome2","icon","spin","size","status","toString","Redirect","to","push","visibilityText","location","query","parseFloat","getDefaultCenter","getDefaultZoom","Well","onSubmit","save","FormGroup","controlId","ControlLabel","FormControl","type","placeholder","onChange","onNameChanged","style","height","componentClass","onCommentChanged","DropdownButton","MenuItem","eventKey","onSelect","onVisibilityChanged","isSuperAdmin","_imageUpload2","onMediaChanged","onNewMediaChanged","containerElement","mapElement","onMarkerClick","Marker","position","ButtonGroup","Button","bsStyle","onCancel","disabled","t"],"mappings":"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","file":"25.index.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Request from 'superagent';\r\nimport { Redirect } from 'react-router';\r\nimport { FormGroup, ControlLabel, FormControl, Checkbox, ButtonGroup, DropdownButton, MenuItem, Button, Well } from 'react-bootstrap';\r\nimport ImageUpload from './common/image-upload/image-upload';\r\nimport {withGoogleMap, GoogleMap, Marker} from \"react-google-maps\";\r\nimport config from '../utils/config.js';\r\nimport auth from '../utils/auth.js';\r\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/fontawesome-free-solid';\r\n\r\nconst GettingStartedGoogleMap = withGoogleMap(props => (\r\n  <GoogleMap\r\n    defaultZoom={props.defaultZoom}\r\n    defaultCenter={props.defaultCenter}\r\n    defaultMapTypeId={google.maps.MapTypeId.TERRAIN}\r\n    onClick={props.onClick.bind(this)}>\r\n    {props.markers}\r\n  </GoogleMap>\r\n));\r\n\r\nexport default class AreaEdit extends Component {\r\n  componentWillMount() {\r\n    if (!auth.isAdmin()) {\r\n      this.setState({pushUrl: \"/login\", error: null});\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.title=config.getTitle() + \" | Area edit\";\r\n    if (this.props.match.params.areaId==-1) {\r\n      this.setState({\r\n        id: -1,\r\n        visibility: 0,\r\n        name: \"\",\r\n        comment: \"\",\r\n        lat: 0,\r\n        lng: 0,\r\n        newMedia: []\r\n      });\r\n    } else {\r\n      Request.get(config.getUrl(\"areas?id=\" + this.props.match.params.areaId)).withCredentials().end((err, res) => {\r\n        if (err) {\r\n          this.setState({error: err});\r\n        } else {\r\n          this.setState({\r\n            id: res.body.id,\r\n            visibility: res.body.visibility,\r\n            name: res.body.name,\r\n            comment: res.body.comment,\r\n            lat: res.body.lat,\r\n            lng: res.body.lng,\r\n            newMedia: []\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onNameChanged(e) {\r\n    this.setState({name: e.target.value});\r\n  }\r\n\r\n  onVisibilityChanged(visibility, e) {\r\n    this.setState({visibility: visibility});\r\n  }\r\n\r\n  onCommentChanged(e) {\r\n    this.setState({comment: e.target.value});\r\n  }\r\n\r\n  onNewMediaChanged(newMedia) {\r\n    this.setState({newMedia: newMedia});\r\n  }\r\n\r\n  save(event) {\r\n    event.preventDefault();\r\n    this.setState({isSaving: true});\r\n    const newMedia = this.state.newMedia.map(m => {return {name: m.file.name.replace(/[^-a-z0-9.]/ig,'_'), photographer: m.photographer, inPhoto: m.inPhoto}});\r\n    var req = Request.post(config.getUrl(\"areas\"))\r\n    .withCredentials()\r\n    .field('json', JSON.stringify({regionId: config.getRegion(), id: this.state.id, visibility: this.state.visibility, name: this.state.name, comment: this.state.comment, lat: this.state.lat, lng: this.state.lng, newMedia: newMedia}))\r\n    .set('Accept', 'application/json')\r\n    this.state.newMedia.forEach(m => req.attach(m.file.name.replace(/[^-a-z0-9.]/ig,'_'), m.file));\r\n    req.end((err, res) => {\r\n      if (err) {\r\n        this.setState({error: err});\r\n      } else {\r\n        this.setState({pushUrl: \"/area/\" + res.body.id});\r\n      }\r\n    });\r\n  }\r\n\r\n  onMarkerClick(event) {\r\n    this.setState({lat: event.latLng.lat(), lng: event.latLng.lng()});\r\n  }\r\n\r\n  onCancel() {\r\n    window.history.back();\r\n  }\r\n\r\n  render() {\r\n    if (!this.state) {\r\n      return <center><FontAwesomeIcon icon=\"spinner\" spin size=\"3x\" /></center>;\r\n    }\r\n    else if (this.state.error) {\r\n      return <span><h3>{this.state.error.status}</h3>{this.state.error.toString()}</span>;\r\n    }\r\n    else if (this.state.pushUrl) {\r\n      return (<Redirect to={this.state.pushUrl} push />);\r\n    }\r\n\r\n    var visibilityText = 'Visible for everyone';\r\n    if (this.state.visibility===1) {\r\n      visibilityText = 'Only visible for administrators';\r\n    } else if (this.state.visibility===2) {\r\n      visibilityText = 'Only visible for super administrators';\r\n    }\r\n    const defaultCenter = this.props.location.query && this.props.location.query.lat && parseFloat(this.props.location.query.lat)>0? {lat: parseFloat(this.props.location.query.lat), lng: parseFloat(this.props.location.query.lng)} : config.getDefaultCenter();\r\n    const defaultZoom = this.props.location.query && this.props.location.query.lat && parseFloat(this.props.location.query.lat)>0? 8 : config.getDefaultZoom();\r\n    return (\r\n      <Well>\r\n        <form onSubmit={this.save.bind(this)}>\r\n          <FormGroup controlId=\"formControlsName\">\r\n            <ControlLabel>Area name</ControlLabel>\r\n            <FormControl type=\"text\" value={this.state.name} placeholder=\"Enter name\" onChange={this.onNameChanged.bind(this)} />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formControlsComment\">\r\n            <ControlLabel>Comment</ControlLabel>\r\n            <FormControl style={{height: '100px'}} componentClass=\"textarea\" placeholder=\"Enter comment\" value={this.state.comment} onChange={this.onCommentChanged.bind(this)} />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formControlsVisibility\">\r\n            <ControlLabel>Visibility</ControlLabel><br/>\r\n            <DropdownButton title={visibilityText} id=\"bg-nested-dropdown\">\r\n              <MenuItem eventKey=\"0\" onSelect={this.onVisibilityChanged.bind(this, 0)}>Visible for everyone</MenuItem>\r\n              <MenuItem eventKey=\"1\" onSelect={this.onVisibilityChanged.bind(this, 1)}>Only visible for administrators</MenuItem>\r\n              {auth.isSuperAdmin() && <MenuItem eventKey=\"2\" onSelect={this.onVisibilityChanged.bind(this, 2)}>Only visible for super administrators</MenuItem>}\r\n            </DropdownButton>\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formControlsMedia\">\r\n            <ImageUpload onMediaChanged={this.onNewMediaChanged.bind(this)} />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"formControlsMap\">\r\n            <ControlLabel>Click to mark area center on map</ControlLabel><br/>\r\n            <section style={{height: '600px'}}>\r\n              <GettingStartedGoogleMap\r\n                containerElement={<div style={{ height: `100%` }} />}\r\n                mapElement={<div style={{ height: `100%` }} />}\r\n                defaultZoom={defaultZoom}\r\n                defaultCenter={defaultCenter}\r\n                onClick={this.onMarkerClick.bind(this)}\r\n                markers={this.state.lat!=0 && this.state.lng!=0? <Marker position={{lat: this.state.lat, lng: this.state.lng}}/> : \"\"}\r\n              />\r\n            </section>\r\n          </FormGroup>\r\n\r\n          <ButtonGroup><Button bsStyle=\"danger\" onClick={this.onCancel.bind(this)}>Cancel</Button><Button type=\"submit\" bsStyle=\"success\" disabled={this.state.isSaving}>{this.state.isSaving? 'Saving...' : 'Save area'}</Button></ButtonGroup>\r\n        </form>\r\n      </Well>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}